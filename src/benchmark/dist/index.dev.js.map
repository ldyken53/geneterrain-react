{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA","sourcesContent":["// const nodeCounts = [1e2, 5e2, 1e3, 2e3, 5e3, 1e4, 2e4, 5e4, 1e5, 2e5, 1e6];\r\n// const density = 20;\r\n// const edgeCounts = nodeCounts.map((n) => n * density);\r\n// const testCase = {\r\n//   nodeCounts,\r\n//   edgeCounts,\r\n// };\r\n// let stepCount = 0;\r\n\r\n// function generatePair(min, max) {\r\n//   function randRange(min, max) {\r\n//     return min + Math.floor(Math.random() * (max - min));\r\n//   }\r\n//   const source = randRange(min, max);\r\n//   let target = randRange(min, max);\r\n//   while (source === target) {\r\n//     target = randRange(min, max);\r\n//   }\r\n\r\n//   return {\r\n//     source: source,\r\n//     target: target,\r\n//   };\r\n// }\r\n\r\n// function generateRandomGraph(nodeCount, edgeCount) {\r\n//   const data = {\r\n//     nodes: [],\r\n//     edges: [],\r\n//   };\r\n\r\n//   data.nodes = Array(4 * nodeCount).fill();\r\n\r\n//   for (let i = 0; i < 4 * nodeCount; i = i + 4) {\r\n//     data.nodes[i] = 0;\r\n//     data.nodes[i + 1] = Math.random();\r\n//     data.nodes[i + 2] = Math.random();\r\n//     data.nodes[i + 3] = 1;\r\n//   }\r\n\r\n//   console.log(\"nodes created\");\r\n//   const edgeHashMap = new Map();\r\n\r\n//   data.edges = Array(2 * edgeCount).fill();\r\n//   let pair;\r\n\r\n//   for (let i = 0; i < 2 * edgeCount; i = i + 2) {\r\n//     do {\r\n//       pair = generatePair(0, nodeCount);\r\n//     } while (edgeHashMap.has(`${pair.source}_${pair.target}`));\r\n//     edgeHashMap.set(`${pair.source}_${pair.target}`, true);\r\n//     edgeHashMap.set(`${pair.target}_${pair.source}`, true);\r\n//     data.edges[i] = pair.source;\r\n//     data.edges[i + 1] = pair.target;\r\n//   }\r\n//   return data;\r\n// }\r\n\r\n// function generateRandomData(nodeCounts, edgeCounts, stepCount) {\r\n//   let nodeCount = nodeCounts[stepCount];\r\n//   let edgeCount = edgeCounts[stepCount];\r\n\r\n//   let generatedData = generateRandomGraph(nodeCount, edgeCount);\r\n//   return generatedData;\r\n// }\r\n\r\n// let data = generateRandomData(nodeCounts, edgeCounts, 0);\r\n// console.log(data);\r\n\r\n// await testFunc(data);\r\n\r\n// async function testFunc(data) {}\r\n"],"file":"index.dev.js"}