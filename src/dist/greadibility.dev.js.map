{"version":3,"sources":["greadibility.js"],"names":["greadability","nodes","links","id","i","j","n","length","m","degree","Array","cMax","idealAngle","dMax","graphStats","crossing","crossingAngle","angularResolutionMin","angularResolutionDev","getSumOfArray","numArray","sum","initialize","link","nodeById","filter","l","source","target","d","index","filteredLinks","forEach","s","t","push","sort","a","b","splice","direction","pi","pj","pk","p1","p2","onSegment","Math","min","max","linesCross","line1","line2","d1","d2","d3","d4","linksCross","link1","link2","x","y","linkCrossings","c","abs","acuteLinesAngle","linesegmentsAngle","temp","len","angle1","angle2","sLine1","sLine2","hypot","acos","PI","slope1","slope2","angle","atan","angularRes","resMin","resDev","nonZeroDeg","node","minAngle","idealMinAngle","incident","line0","incidentLinkAngles","nextLink","angleA","angleB","map","apply","crossInfo","angularResInfo"],"mappings":"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","sourcesContent":["export let greadability = function (nodes, links, id) {\r\n  var i,\r\n    j,\r\n    n = nodes.length,\r\n    m,\r\n    degree = new Array(nodes.length),\r\n    cMax,\r\n    idealAngle = 70,\r\n    dMax;\r\n\r\n  /*\r\n   * Tracks the global graph readability metrics.\r\n   */\r\n  var graphStats = {\r\n    crossing: 0, // Normalized link crossings\r\n    crossingAngle: 0, // Normalized average dev from 70 deg\r\n    angularResolutionMin: 0, // Normalized avg dev from ideal min angle\r\n    angularResolutionDev: 0, // Normalized avg dev from each link\r\n  };\r\n\r\n  var getSumOfArray = function (numArray) {\r\n    var i = 0,\r\n      n = numArray.length,\r\n      sum = 0;\r\n    for (; i < n; ++i) sum += numArray[i];\r\n    return sum;\r\n  };\r\n\r\n  var initialize = function () {\r\n    var i, j, link;\r\n    var nodeById = {};\r\n    // Filter out self loops\r\n    links = links.filter(function (l) {\r\n      return l.source !== l.target;\r\n    });\r\n\r\n    m = links.length;\r\n\r\n    if (!id) {\r\n      id = function (d) {\r\n        return d.index;\r\n      };\r\n    }\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      nodes[i].index = i;\r\n      degree[i] = [];\r\n      nodeById[id(nodes[i], i, nodeById)] = nodes[i];\r\n    }\r\n\r\n    // Make sure source and target are nodes and not indices.\r\n    for (i = 0; i < m; ++i) {\r\n      link = links[i];\r\n      if (typeof link.source !== \"object\") link.source = nodeById[link.source];\r\n      if (typeof link.target !== \"object\") link.target = nodeById[link.target];\r\n    }\r\n\r\n    // Filter out duplicate links\r\n    var filteredLinks = [];\r\n    links.forEach(function (l) {\r\n      var s = l.source,\r\n        t = l.target;\r\n      if (s.index > t.index) {\r\n        filteredLinks.push({ source: t, target: s });\r\n      } else {\r\n        filteredLinks.push({ source: s, target: t });\r\n      }\r\n    });\r\n    links = filteredLinks;\r\n    links.sort(function (a, b) {\r\n      if (a.source.index < b.source.index) return -1;\r\n      if (a.source.index > b.source.index) return 1;\r\n      if (a.target.index < b.target.index) return -1;\r\n      if (a.target.index > b.target.index) return 1;\r\n      return 0;\r\n    });\r\n    i = 1;\r\n    while (i < links.length) {\r\n      if (\r\n        links[i - 1].source.index === links[i].source.index &&\r\n        links[i - 1].target.index === links[i].target.index\r\n      ) {\r\n        links.splice(i, 1);\r\n      } else ++i;\r\n    }\r\n\r\n    // Update length, if a duplicate was deleted.\r\n    m = links.length;\r\n\r\n    // Calculate degree.\r\n    for (i = 0; i < m; ++i) {\r\n      link = links[i];\r\n      link.index = i;\r\n\r\n      degree[link.source.index].push(link);\r\n      degree[link.target.index].push(link);\r\n    }\r\n  };\r\n\r\n  // Assume node.x and node.y are the coordinates\r\n\r\n  function direction(pi, pj, pk) {\r\n    var p1 = [pk[0] - pi[0], pk[1] - pi[1]];\r\n    var p2 = [pj[0] - pi[0], pj[1] - pi[1]];\r\n    return p1[0] * p2[1] - p2[0] * p1[1];\r\n  }\r\n\r\n  // Is point k on the line segment formed by points i and j?\r\n  // Inclusive, so if pk == pi or pk == pj then return true.\r\n  function onSegment(pi, pj, pk) {\r\n    return (\r\n      Math.min(pi[0], pj[0]) <= pk[0] &&\r\n      pk[0] <= Math.max(pi[0], pj[0]) &&\r\n      Math.min(pi[1], pj[1]) <= pk[1] &&\r\n      pk[1] <= Math.max(pi[1], pj[1])\r\n    );\r\n  }\r\n\r\n  function linesCross(line1, line2) {\r\n    var d1, d2, d3, d4;\r\n\r\n    // CLRS 2nd ed. pg. 937\r\n    d1 = direction(line2[0], line2[1], line1[0]);\r\n    d2 = direction(line2[0], line2[1], line1[1]);\r\n    d3 = direction(line1[0], line1[1], line2[0]);\r\n    d4 = direction(line1[0], line1[1], line2[1]);\r\n\r\n    if (\r\n      ((d1 > 0 && d2 < 0) || (d1 < 0 && d2 > 0)) &&\r\n      ((d3 > 0 && d4 < 0) || (d3 < 0 && d4 > 0))\r\n    ) {\r\n      return true;\r\n    } else if (d1 === 0 && onSegment(line2[0], line2[1], line1[0])) {\r\n      return true;\r\n    } else if (d2 === 0 && onSegment(line2[0], line2[1], line1[1])) {\r\n      return true;\r\n    } else if (d3 === 0 && onSegment(line1[0], line1[1], line2[0])) {\r\n      return true;\r\n    } else if (d4 === 0 && onSegment(line1[0], line1[1], line2[1])) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function linksCross(link1, link2) {\r\n    // Self loops are not intersections\r\n    if (\r\n      link1.index === link2.index ||\r\n      link1.source === link1.target ||\r\n      link2.source === link2.target\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    // Links cannot intersect if they share a node\r\n    if (\r\n      link1.source === link2.source ||\r\n      link1.source === link2.target ||\r\n      link1.target === link2.source ||\r\n      link1.target === link2.target\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    var line1 = [\r\n      [link1.source.x, link1.source.y],\r\n      [link1.target.x, link1.target.y],\r\n    ];\r\n\r\n    var line2 = [\r\n      [link2.source.x, link2.source.y],\r\n      [link2.target.x, link2.target.y],\r\n    ];\r\n\r\n    return linesCross(line1, line2);\r\n  }\r\n\r\n  function linkCrossings() {\r\n    var i,\r\n      j,\r\n      c = 0,\r\n      d = 0,\r\n      link1,\r\n      link2,\r\n      line1,\r\n      line2;\r\n\r\n    // Sum the upper diagonal of the edge crossing matrix.\r\n    for (i = 0; i < m; ++i) {\r\n      for (j = i + 1; j < m; ++j) {\r\n        link1 = links[i];\r\n        link2 = links[j];\r\n\r\n        // Check if link i and link j intersect\r\n        if (linksCross(link1, link2)) {\r\n          line1 = [\r\n            [link1.source.x, link1.source.y],\r\n            [link1.target.x, link1.target.y],\r\n          ];\r\n          line2 = [\r\n            [link2.source.x, link2.source.y],\r\n            [link2.target.x, link2.target.y],\r\n          ];\r\n          ++c;\r\n          d += Math.abs(idealAngle - acuteLinesAngle(line1, line2));\r\n        }\r\n      }\r\n    }\r\n\r\n    return { c: 2 * c, d: 2 * d };\r\n  }\r\n\r\n  function linesegmentsAngle(line1, line2) {\r\n    // Finds the (counterclockwise) angle from line segement line1 to\r\n    // line segment line2. Assumes the lines share one end point.\r\n    // If both endpoints are the same, or if both lines have zero\r\n    // length, then return 0 angle.\r\n    // Param order matters:\r\n    // linesegmentsAngle(line1, line2) != linesegmentsAngle(line2, line1)\r\n    var temp, len, angle1, angle2, sLine1, sLine2;\r\n\r\n    // Re-orient so that line1[0] and line2[0] are the same.\r\n    if (line1[0][0] === line2[1][0] && line1[0][1] === line2[1][1]) {\r\n      temp = line2[1];\r\n      line2[1] = line2[0];\r\n      line2[0] = temp;\r\n    } else if (line1[1][0] === line2[0][0] && line1[1][1] === line2[0][1]) {\r\n      temp = line1[1];\r\n      line1[1] = line1[0];\r\n      line1[0] = temp;\r\n    } else if (line1[1][0] === line2[1][0] && line1[1][1] === line2[1][1]) {\r\n      temp = line1[1];\r\n      line1[1] = line1[0];\r\n      line1[0] = temp;\r\n      temp = line2[1];\r\n      line2[1] = line2[0];\r\n      line2[0] = temp;\r\n    }\r\n\r\n    // Shift the line so that the first point is at (0,0).\r\n    sLine1 = [\r\n      [line1[0][0] - line1[0][0], line1[0][1] - line1[0][1]],\r\n      [line1[1][0] - line1[0][0], line1[1][1] - line1[0][1]],\r\n    ];\r\n    // Normalize the line length.\r\n    len = Math.hypot(sLine1[1][0], sLine1[1][1]);\r\n    if (len === 0) return 0;\r\n    sLine1[1][0] /= len;\r\n    sLine1[1][1] /= len;\r\n    // If y < 0, angle = acos(x), otherwise angle = 360 - acos(x)\r\n    angle1 = (Math.acos(sLine1[1][0]) * 180) / Math.PI;\r\n    if (sLine1[1][1] < 0) angle1 = 360 - angle1;\r\n\r\n    // Shift the line so that the first point is at (0,0).\r\n    sLine2 = [\r\n      [line2[0][0] - line2[0][0], line2[0][1] - line2[0][1]],\r\n      [line2[1][0] - line2[0][0], line2[1][1] - line2[0][1]],\r\n    ];\r\n    // Normalize the line length.\r\n    len = Math.hypot(sLine2[1][0], sLine2[1][1]);\r\n    if (len === 0) return 0;\r\n    sLine2[1][0] /= len;\r\n    sLine2[1][1] /= len;\r\n    // If y < 0, angle = acos(x), otherwise angle = 360 - acos(x)\r\n    angle2 = (Math.acos(sLine2[1][0]) * 180) / Math.PI;\r\n    if (sLine2[1][1] < 0) angle2 = 360 - angle2;\r\n\r\n    return angle1 <= angle2 ? angle2 - angle1 : 360 - (angle1 - angle2);\r\n  }\r\n\r\n  function acuteLinesAngle(line1, line2) {\r\n    // Acute angle of intersection, in degrees. Assumes these lines\r\n    // intersect.\r\n    var slope1 = (line1[1][1] - line1[0][1]) / (line1[1][0] - line1[0][0]);\r\n    var slope2 = (line2[1][1] - line2[0][1]) / (line2[1][0] - line2[0][0]);\r\n\r\n    // If these lines are two links incident on the same node, need\r\n    // to check if the angle is 0 or 180.\r\n    if (slope1 === slope2) {\r\n      // If line2 is not on line1 and line1 is not on line2, then\r\n      // the lines share only one point and the angle must be 180.\r\n      if (\r\n        !(\r\n          onSegment(line1[0], line1[1], line2[0]) &&\r\n          onSegment(line1[0], line1[1], line2[1])\r\n        ) ||\r\n        !(\r\n          onSegment(line2[0], line2[1], line1[0]) &&\r\n          onSegment(line2[0], line2[1], line1[1])\r\n        )\r\n      )\r\n        return 180;\r\n      else return 0;\r\n    }\r\n\r\n    var angle = Math.abs(Math.atan(slope1) - Math.atan(slope2));\r\n\r\n    return ((angle > Math.PI / 2 ? Math.PI - angle : angle) * 180) / Math.PI;\r\n  }\r\n\r\n  function angularRes() {\r\n    var j,\r\n      resMin = 0,\r\n      resDev = 0,\r\n      nonZeroDeg,\r\n      node,\r\n      minAngle,\r\n      idealMinAngle,\r\n      incident,\r\n      line0,\r\n      line1,\r\n      line2,\r\n      incidentLinkAngles,\r\n      nextLink;\r\n\r\n    nonZeroDeg = degree.filter(function (d) {\r\n      return d.length >= 1;\r\n    }).length;\r\n\r\n    for (j = 0; j < n; ++j) {\r\n      node = nodes[j];\r\n      line0 = [\r\n        [node.x, node.y],\r\n        [node.x + 1, node.y],\r\n      ];\r\n\r\n      // Links that are incident to this node (already filtered out self loops)\r\n      incident = degree[j];\r\n\r\n      if (incident.length <= 1) continue;\r\n\r\n      idealMinAngle = 360 / incident.length;\r\n\r\n      // Sort edges by the angle they make from an imaginary vector\r\n      // emerging at angle 0 on the unit circle.\r\n      // Necessary for calculating angles of incident edges correctly\r\n      incident.sort(function (a, b) {\r\n        line1 = [\r\n          [a.source.x, a.source.y],\r\n          [a.target.x, a.target.y],\r\n        ];\r\n        line2 = [\r\n          [b.source.x, b.source.y],\r\n          [b.target.x, b.target.y],\r\n        ];\r\n        var angleA = linesegmentsAngle(line0, line1);\r\n        var angleB = linesegmentsAngle(line0, line2);\r\n        return angleA < angleB ? -1 : angleA > angleB ? 1 : 0;\r\n      });\r\n\r\n      incidentLinkAngles = incident.map(function (l, i) {\r\n        nextLink = incident[(i + 1) % incident.length];\r\n        line1 = [\r\n          [l.source.x, l.source.y],\r\n          [l.target.x, l.target.y],\r\n        ];\r\n        line2 = [\r\n          [nextLink.source.x, nextLink.source.y],\r\n          [nextLink.target.x, nextLink.target.y],\r\n        ];\r\n        return linesegmentsAngle(line1, line2);\r\n      });\r\n\r\n      minAngle = Math.min.apply(null, incidentLinkAngles);\r\n\r\n      resMin += Math.abs(idealMinAngle - minAngle) / idealMinAngle;\r\n\r\n      resDev +=\r\n        getSumOfArray(\r\n          incidentLinkAngles.map(function (angle) {\r\n            return Math.abs(idealMinAngle - angle) / idealMinAngle;\r\n          })\r\n        ) /\r\n        (2 * incident.length - 2);\r\n    }\r\n\r\n    // Divide by number of nodes with degree != 0\r\n    resMin = resMin / nonZeroDeg;\r\n\r\n    // Divide by number of nodes with degree != 0\r\n    resDev = resDev / nonZeroDeg;\r\n\r\n    return { resMin: resMin, resDev: resDev };\r\n  }\r\n\r\n  initialize();\r\n\r\n  cMax =\r\n    (m * (m - 1)) / 2 -\r\n    getSumOfArray(\r\n      degree.map(function (d) {\r\n        return d.length * (d.length - 1);\r\n      })\r\n    ) /\r\n      2;\r\n\r\n  var crossInfo = linkCrossings();\r\n\r\n  dMax = crossInfo.c * idealAngle;\r\n\r\n  graphStats.crossing = 1 - (cMax > 0 ? crossInfo.c / cMax : 0);\r\n\r\n  graphStats.crossingAngle = 1 - (dMax > 0 ? crossInfo.d / dMax : 0);\r\n\r\n  var angularResInfo = angularRes();\r\n\r\n  graphStats.angularResolutionMin = 1 - angularResInfo.resMin;\r\n\r\n  graphStats.angularResolutionDev = 1 - angularResInfo.resDev;\r\n\r\n  return graphStats;\r\n};\r\n"],"file":"greadibility.dev.js"}