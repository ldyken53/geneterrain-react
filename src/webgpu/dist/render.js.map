{"version":3,"sources":["render.tsx"],"names":[],"mappings":"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","file":"render.js","sourcesContent":["import { Controller } from './ez_canvas_controller';\r\nimport TerrainGenerator from './terrain_generator';\r\nimport { display_2d_vert, display_2d_frag, node_vert, node_frag, edge_vert, edge_frag } from './wgsl';\r\nimport { saveAs } from 'file-saver'; \r\nimport ForceDirected from './force_directed';\r\nimport * as d3 from \"d3\";\r\n\r\nclass Renderer {\r\n  public uniform2DBuffer : GPUBuffer | null = null;\r\n  public terrainGenerator : TerrainGenerator | null = null;\r\n  public forceDirected : ForceDirected | null = null;\r\n  public device : GPUDevice;\r\n  public bindGroup2D : GPUBindGroup | null = null;\r\n  public nodeBindGroup : GPUBindGroup | null = null;\r\n  public edgeBindGroup : GPUBindGroup | null = null;\r\n  public nodeDataBuffer : GPUBuffer | null = null;\r\n  public edgeDataBuffer : GPUBuffer | null = null;\r\n  public colorTexture : GPUTexture | null = null;\r\n  public viewBoxBuffer : GPUBuffer | null = null;\r\n  public nodePipeline : GPURenderPipeline | null = null;\r\n  public edgePipeline : GPURenderPipeline | null = null;\r\n  public nodeLength : number = 1;\r\n  public edgeLength : number = 1;\r\n  public rangeBuffer : GPUBuffer | null = null;\r\n  public nodeToggle : boolean = true;\r\n  public terrainToggle : boolean = false;\r\n  public edgeToggle : boolean = true;\r\n  public colormapImage : HTMLImageElement;\r\n  public outCanvasRef : React.RefObject<HTMLCanvasElement>;\r\n  public canvasSize : [number, number] | null = null;\r\n  public idealLength : number = 0.05;\r\n  public coolingFactor : number = 0.9;\r\n  public iterRef : React.RefObject<HTMLLabelElement>;\r\n\r\n  constructor(\r\n    adapter : GPUAdapter, device : GPUDevice, \r\n    canvasRef : React.RefObject<HTMLCanvasElement>, \r\n    colormap : ImageBitmap, colormapImage : HTMLImageElement,\r\n    outCanvasRef : React.RefObject<HTMLCanvasElement>, \r\n    fpsRef : React.RefObject<HTMLLabelElement>,\r\n    iterRef : React.RefObject<HTMLLabelElement>,\r\n  ) {\r\n    this.iterRef = iterRef;\r\n    this.colormapImage = colormapImage;\r\n    this.outCanvasRef = outCanvasRef\r\n    this.device = device;\r\n    // Check that canvas is active\r\n    if (canvasRef.current === null) return;\r\n    const context = canvasRef.current.getContext('webgpu')!;\r\n  \r\n    const devicePixelRatio = window.devicePixelRatio || 1;\r\n    const presentationSize = [\r\n      canvasRef.current.clientWidth * devicePixelRatio,\r\n      canvasRef.current.clientHeight * devicePixelRatio,\r\n    ];\r\n    const presentationFormat = context.getPreferredFormat(adapter);\r\n    this.canvasSize = [\r\n      canvasRef.current.width,\r\n      canvasRef.current.height\r\n    ];\r\n  \r\n    context.configure({\r\n      device,\r\n      format: presentationFormat,\r\n      size: presentationSize,\r\n    });\r\n\r\n    this.edgeDataBuffer = device.createBuffer({\r\n      size: 4 * 4,\r\n      usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\r\n      mappedAtCreation: true\r\n    });\r\n\r\n    let edgeData = [0, 0, 0.01, 0.01];\r\n    new Float32Array(this.edgeDataBuffer.getMappedRange()).set(edgeData);\r\n    this.edgeDataBuffer.unmap();\r\n\r\n    // setting it to some trivial data so that it won't fail the pipeline before edge data is available\r\n\r\n    this.edgePipeline = device.createRenderPipeline({\r\n      vertex: {\r\n        module: device.createShaderModule({\r\n          code: edge_vert\r\n        }),\r\n        entryPoint: \"main\",\r\n        buffers:[\r\n          {\r\n            arrayStride: 2 * 4 * 1,\r\n            attributes:[{\r\n              format:\"float32x2\" as GPUVertexFormat,\r\n              offset: 0,\r\n              shaderLocation: 0\r\n            }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      fragment: {\r\n        module: device.createShaderModule({\r\n          code: edge_frag\r\n        }),\r\n        entryPoint: \"main\",\r\n        targets: [\r\n          {\r\n            format: presentationFormat,\r\n            blend: {\r\n              color: {srcFactor: \"one\" as GPUBlendFactor, dstFactor: \"one-minus-src-alpha\" as GPUBlendFactor},\r\n              alpha: {srcFactor: \"one\" as GPUBlendFactor, dstFactor: \"one-minus-src-alpha\" as GPUBlendFactor}\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      primitive: {\r\n        topology: \"line-list\" //triangle-list is default   \r\n      },\r\n      multisample: {\r\n        count: 4\r\n      }\r\n    });\r\n\r\n    this.rangeBuffer = this.device.createBuffer({\r\n      size: 2 * 4,\r\n      usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC,\r\n    });\r\n\r\n    var nodePositionBuffer = device.createBuffer({\r\n      size: 6 * 2 * 4,\r\n      usage: GPUBufferUsage.VERTEX,\r\n      mappedAtCreation: true\r\n    });\r\n    new Float32Array(nodePositionBuffer.getMappedRange()).set([\r\n      1, -1,\r\n      -1, -1,\r\n      -1, 1,\r\n      1, -1,\r\n      -1, 1,\r\n      1, 1,\r\n    ]);\r\n    nodePositionBuffer.unmap();\r\n    var edgePositionBuffer = device.createBuffer({\r\n      size: 2 * 2 * 4,\r\n      usage: GPUBufferUsage.VERTEX,\r\n      mappedAtCreation: true\r\n    });\r\n    new Float32Array(edgePositionBuffer.getMappedRange()).set([\r\n      0, 0,\r\n      1, 1,\r\n    ]);\r\n    edgePositionBuffer.unmap();\r\n\r\n    this.nodeDataBuffer = device.createBuffer({\r\n      size: 4 * 4,\r\n      usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\r\n      mappedAtCreation: true\r\n    });\r\n    new Float32Array(this.nodeDataBuffer.getMappedRange()).set([\r\n      0.5, 0.5,\r\n      0.5, 0.5,\r\n    ]);\r\n    this.nodeDataBuffer.unmap();\r\n\r\n    this.nodePipeline = device.createRenderPipeline({\r\n      vertex: {\r\n        module: device.createShaderModule({\r\n          code: node_vert,\r\n        }),\r\n        entryPoint: 'main',\r\n        buffers: [\r\n          {\r\n            arrayStride: 2 * 4,\r\n            attributes: [\r\n              {\r\n                format: \"float32x2\" as GPUVertexFormat,\r\n                offset: 0,\r\n                shaderLocation: 0,\r\n              }\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      fragment: {\r\n        module: device.createShaderModule({\r\n          code: node_frag,\r\n        }),\r\n        entryPoint: 'main',\r\n        targets: [\r\n          {\r\n            format: presentationFormat,\r\n            blend: {\r\n              color: {srcFactor: \"one\" as GPUBlendFactor, dstFactor: \"one-minus-src-alpha\" as GPUBlendFactor},\r\n              alpha: {srcFactor: \"one\" as GPUBlendFactor, dstFactor: \"one-minus-src-alpha\" as GPUBlendFactor}\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      primitive: {\r\n        topology: 'triangle-list',\r\n      },\r\n      multisample: {\r\n        count: 4\r\n      }\r\n    });\r\n  \r\n    const pipeline = device.createRenderPipeline({\r\n      vertex: {\r\n        module: device.createShaderModule({\r\n          code: display_2d_vert,\r\n        }),\r\n        entryPoint: 'main',\r\n        buffers: [\r\n          {\r\n            arrayStride: 4 * 4,\r\n            attributes: [\r\n              {\r\n                format: \"float32x4\" as GPUVertexFormat,\r\n                offset: 0,\r\n                shaderLocation: 0,\r\n              }\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      fragment: {\r\n        module: device.createShaderModule({\r\n          code: display_2d_frag,\r\n        }),\r\n        entryPoint: 'main',\r\n        targets: [\r\n          {\r\n            format: presentationFormat,\r\n          },\r\n        ],\r\n      },\r\n      primitive: {\r\n        topology: 'triangle-list',\r\n      },\r\n      multisample: {\r\n        count: 4\r\n      }\r\n    });\r\n\r\n    // Vertices to render\r\n    var dataBuf2D = device.createBuffer({\r\n      size: 6 * 4 * 4,\r\n      usage: GPUBufferUsage.VERTEX,\r\n      mappedAtCreation: true\r\n    });\r\n    new Float32Array(dataBuf2D.getMappedRange()).set([\r\n      1, -1, 0, 1,  // position\r\n      -1, -1, 0, 1, // position\r\n      -1, 1, 0, 1,   // position\r\n      1, -1, 0, 1,  // position\r\n      -1, 1, 0, 1, // position\r\n      1, 1, 0, 1,   // position\r\n    ]);\r\n    dataBuf2D.unmap();\r\n\r\n    // Set up uniform buffers for bind group\r\n    this.uniform2DBuffer = device.createBuffer({\r\n      size: 2 * 4,\r\n      usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\r\n    });\r\n    device.queue.writeBuffer(this.uniform2DBuffer, 0, new Float32Array([0.8, 0.2]), 0, 2);\r\n    const imageSizeBuffer = device.createBuffer({\r\n      size: 2 * 4,\r\n      usage: GPUBufferUsage.UNIFORM,\r\n      mappedAtCreation: true\r\n    });\r\n    new Uint32Array(imageSizeBuffer.getMappedRange()).set(this.canvasSize!);\r\n    imageSizeBuffer.unmap();\r\n\r\n    // Load colormap texture\r\n    this.colorTexture = device.createTexture({\r\n      size: [colormap.width, colormap.height, 1],\r\n      format: \"rgba8unorm\",\r\n      usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT,\r\n    });\r\n    device.queue.copyExternalImageToTexture(\r\n      { source: colormap },\r\n      { texture: this.colorTexture },\r\n      [colormap.width, colormap.height, 1]\r\n    );\r\n\r\n    this.terrainGenerator = new TerrainGenerator(device, this.canvasSize![0], this.canvasSize![1]);\r\n    this.forceDirected = new ForceDirected(device);\r\n\r\n    this.bindGroup2D = device.createBindGroup({\r\n      layout: pipeline.getBindGroupLayout(0),\r\n      entries: [\r\n        {\r\n          binding: 0,\r\n          resource: this.colorTexture.createView(),\r\n        },\r\n        {\r\n          binding: 1,\r\n          resource: {\r\n            buffer: this.terrainGenerator.pixelValueBuffer,\r\n          }\r\n        },\r\n        {\r\n          binding: 2,\r\n          resource: {\r\n            buffer: this.uniform2DBuffer,\r\n          },\r\n        },\r\n        {\r\n          binding: 3,\r\n          resource: {\r\n            buffer: imageSizeBuffer,\r\n          }\r\n        }\r\n      ],\r\n    });\r\n    this.viewBoxBuffer = device.createBuffer({\r\n      size: 4 * 4,\r\n      usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\r\n    });\r\n    device.queue.writeBuffer(this.viewBoxBuffer, 0, new Float32Array([0, 0, 1, 1]), 0, 4);\r\n    var translation = [0, 0, 1, 1];\r\n    var newTranslation = [0, 0, 1, 1];\r\n    var controller = new Controller();\r\n    var terrainGenerator = this.terrainGenerator;\r\n    var render = this;\r\n    controller.mousemove = function (prev, cur, evt) {\r\n      if (evt.buttons == 1) {\r\n        var change = [(cur[0] - prev[0]) * (translation[2] - translation[0]) / render.canvasSize![0], (prev[1] - cur[1]) * (translation[3] - translation[1]) / render.canvasSize![1]];\r\n        newTranslation = [newTranslation[0] - change[0], newTranslation[1] - change[1], newTranslation[2] - change[0], newTranslation[3] - change[1]]\r\n        if (Math.abs(newTranslation[0] - translation[0]) > 0.03 * (translation[2] - translation[0]) || Math.abs(newTranslation[1] - translation[1]) > 0.03 * (translation[3] - translation[1])) {\r\n          translation = newTranslation;\r\n          if (render.terrainToggle) {\r\n            terrainGenerator!.computeTerrain(undefined, undefined, translation, render.rangeBuffer, render.nodeLength);\r\n          }\r\n          device.queue.writeBuffer(render.viewBoxBuffer!, 0, new Float32Array(translation), 0, 4);\r\n        }\r\n      }\r\n    };\r\n    controller.wheel = function (amt) {\r\n      var change = [amt / 1000, amt / 1000];\r\n      newTranslation = [newTranslation[0] + change[0], newTranslation[1] + change[1], newTranslation[2] - change[0], newTranslation[3] - change[1]];\r\n      if (newTranslation[2] - newTranslation[0] > 0.01 && newTranslation[3] - newTranslation[1] > 0.01) {\r\n        translation = newTranslation;\r\n        if (render.terrainToggle) {\r\n          terrainGenerator!.computeTerrain(undefined, undefined, translation, render.rangeBuffer, render.nodeLength);\r\n        }\r\n        device.queue.writeBuffer(render.viewBoxBuffer!, 0, new Float32Array(translation), 0, 4);\r\n      } else {\r\n        newTranslation = translation;\r\n      }\r\n    };\r\n    controller.registerForCanvas(canvasRef.current);\r\n    this.nodeBindGroup = device.createBindGroup({\r\n      layout: this.nodePipeline.getBindGroupLayout(0),\r\n      entries: [\r\n        {\r\n          binding: 0,\r\n          resource: {\r\n            buffer: this.viewBoxBuffer,\r\n          },\r\n        },\r\n        {\r\n          binding: 1,\r\n          resource: {\r\n            buffer: this.nodeDataBuffer,\r\n          }\r\n        }\r\n      ],\r\n    });\r\n    this.edgeBindGroup = device.createBindGroup({\r\n      layout: this.edgePipeline.getBindGroupLayout(0),\r\n      entries: [\r\n        {\r\n          binding: 0,\r\n          resource: {\r\n            buffer: this.viewBoxBuffer,\r\n          },\r\n        },\r\n        {\r\n          binding: 1,\r\n          resource: {\r\n            buffer: this.nodeDataBuffer,\r\n          }\r\n        },\r\n        {\r\n          binding: 2,\r\n          resource: {\r\n            buffer: this.edgeDataBuffer,\r\n          }\r\n        }\r\n      ],\r\n    });\r\n\r\n    const texture = device.createTexture({\r\n      size: presentationSize,\r\n      sampleCount: 4,\r\n      format: presentationFormat,\r\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\r\n    });\r\n    const view = texture.createView();\r\n\r\n    var render = this;\r\n    var frameCount = 0;\r\n    var timeToSecond = 1000;\r\n    async function frame() {\r\n        var start = performance.now();\r\n        // Sample is no longer the active page.\r\n        if (!canvasRef.current) return;\r\n\r\n        const commandEncoder = device.createCommandEncoder();\r\n\r\n        const renderPassDescriptor: GPURenderPassDescriptor = {\r\n        colorAttachments: [\r\n          {\r\n            view,\r\n            resolveTarget: context.getCurrentTexture().createView(),\r\n            loadValue: { r: 1.0, g: 1.0, b: 1.0, a: 1.0 },\r\n            storeOp: \"discard\" as GPUStoreOp,\r\n          },\r\n        ],\r\n        };\r\n\r\n        const passEncoder = commandEncoder.beginRenderPass(renderPassDescriptor);\r\n        if (render.terrainToggle) {\r\n          passEncoder.setPipeline(pipeline);\r\n          passEncoder.setVertexBuffer(0, dataBuf2D);\r\n          passEncoder.setBindGroup(0, render.bindGroup2D!);\r\n          passEncoder.draw(6, 1, 0, 0);\r\n        }\r\n        if (render.edgeToggle) {\r\n          passEncoder.setPipeline(render.edgePipeline!);\r\n          passEncoder.setVertexBuffer(0, edgePositionBuffer);\r\n          passEncoder.setBindGroup(0, render.edgeBindGroup!);\r\n          passEncoder.draw(2, render.edgeLength, 0, 0);\r\n        }\r\n        if (render.nodeToggle) {\r\n          passEncoder.setPipeline(render.nodePipeline!);\r\n          passEncoder.setVertexBuffer(0, nodePositionBuffer);\r\n          passEncoder.setBindGroup(0, render.nodeBindGroup!);\r\n          passEncoder.draw(6, render.nodeLength, 0, 0);\r\n        }\r\n        passEncoder.endPass();\r\n  \r\n        device.queue.submit([commandEncoder.finish()]);\r\n        await device.queue.onSubmittedWorkDone();\r\n        var end = performance.now();\r\n        if (timeToSecond - (end - start) < 0) {\r\n          fpsRef.current!.innerText = `FPS: ${frameCount}`;\r\n          timeToSecond = 1000 + (timeToSecond - (end - start));\r\n          frameCount = 0;\r\n        } else {\r\n          timeToSecond -= end - start;\r\n        }\r\n        frameCount += 1;\r\n        requestAnimationFrame(frame);\r\n    }\r\n\r\n    requestAnimationFrame(frame);\r\n\r\n  }\r\n\r\n  setNodeEdgeData(nodeData : Array<number>, edgeData : Array<number>) {\r\n    this.nodeDataBuffer = this.device.createBuffer({\r\n      size: nodeData.length * 4,\r\n      usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\r\n      mappedAtCreation: true,\r\n    });\r\n    new Float32Array(this.nodeDataBuffer.getMappedRange()).set(nodeData);\r\n    this.nodeDataBuffer.unmap();\r\n    this.edgeDataBuffer = this.device.createBuffer({\r\n      size: edgeData.length * 4,\r\n      usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE,\r\n      mappedAtCreation: true\r\n    });\r\n    new Uint32Array(this.edgeDataBuffer.getMappedRange()).set(edgeData);\r\n    this.edgeDataBuffer.unmap();\r\n    this.edgeBindGroup = this.device.createBindGroup({\r\n      layout: this.edgePipeline!.getBindGroupLayout(0),\r\n      entries: [\r\n        {\r\n          binding: 0,\r\n          resource: {\r\n            buffer: this.viewBoxBuffer!,\r\n          },\r\n        },\r\n        {\r\n          binding: 1,\r\n          resource: {\r\n            buffer: this.nodeDataBuffer!,\r\n          }\r\n        },\r\n        {\r\n          binding: 2,\r\n          resource: {\r\n            buffer: this.edgeDataBuffer!,\r\n          }\r\n        }\r\n      ],\r\n    });\r\n    this.nodeBindGroup = this.device.createBindGroup({\r\n      layout: this.nodePipeline!.getBindGroupLayout(0),\r\n      entries: [\r\n        {\r\n          binding: 0,\r\n          resource: {\r\n            buffer: this.viewBoxBuffer!,\r\n          },\r\n        },\r\n        {\r\n          binding: 1,\r\n          resource: {\r\n            buffer: this.nodeDataBuffer!,\r\n          }\r\n        }\r\n      ],\r\n    });\r\n    this.edgeLength = edgeData.length;\r\n    this.nodeLength = nodeData.length / 4;\r\n    this.terrainGenerator!.computeTerrain(this.nodeDataBuffer, undefined, undefined, this.rangeBuffer, this.nodeLength);\r\n  }\r\n\r\n  setWidthFactor(widthFactor : number) {\r\n    this.terrainGenerator!.computeTerrain(undefined, widthFactor, undefined, this.rangeBuffer, this.nodeLength);\r\n  }\r\n\r\n  setPeakValue(value : number) {\r\n    this.device.queue.writeBuffer(this.uniform2DBuffer!, 0, new Float32Array([value]), 0, 1);\r\n  }\r\n\r\n  setValleyValue(value : number) {\r\n    this.device.queue.writeBuffer(this.uniform2DBuffer!, 4, new Float32Array([value]), 0, 1);\r\n  }\r\n\r\n  setCoolingFactor(value : number) {\r\n    this.coolingFactor = value;\r\n  }\r\n\r\n  setIdealLength(value : number) {\r\n    this.idealLength = value;\r\n  }\r\n\r\n  setGlobalRange() {\r\n    if (this.rangeBuffer) {\r\n      this.rangeBuffer = null;\r\n    } else {\r\n      this.rangeBuffer = this.device.createBuffer({\r\n        size: 2 * 4,\r\n        usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC,\r\n      });    \r\n    }\r\n  }\r\n\r\n  async runForceDirected() {\r\n    this.forceDirected!.runForces(this.nodeDataBuffer!, this.edgeDataBuffer!, this.nodeLength, this.edgeLength, this.coolingFactor, this.idealLength, 10000, 100, this.iterRef);\r\n  }\r\n\r\n  toggleTerrainLayer() {\r\n    this.terrainToggle = !this.terrainToggle;\r\n  }\r\n\r\n  toggleNodeLayer() {\r\n    this.nodeToggle = !this.nodeToggle;\r\n  }\r\n\r\n  toggleEdgeLayer() {\r\n    this.edgeToggle = !this.edgeToggle;\r\n  }\r\n\r\n  setColormap(colormap, colormapImage) {\r\n    this.device.queue.copyExternalImageToTexture(\r\n      { source: colormap },\r\n      { texture: this.colorTexture! },\r\n      [colormap.width, colormap.height, 1]\r\n    );\r\n    this.colormapImage = colormapImage;\r\n  }\r\n\r\n  async onSave() {\r\n    var height = this.outCanvasRef.current!.height;\r\n    var width = this.outCanvasRef.current!.width;\r\n    const gpuReadBuffer = this.device.createBuffer({\r\n      size: width * height * 4,\r\n      usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ\r\n    });\r\n    console.log(width, height);\r\n    var commandEncoder = this.device.createCommandEncoder();\r\n    // Encode commands for copying buffer to buffer.\r\n    commandEncoder.copyBufferToBuffer(\r\n      this.terrainGenerator!.pixelValueBuffer /* source buffer */,\r\n      0 /* source offset */,\r\n      gpuReadBuffer /* destination buffer */,\r\n      0 /* destination offset */,\r\n      width * height * 4 /* size */\r\n    );\r\n\r\n    // Submit GPU commands.\r\n    const gpuCommands = commandEncoder.finish();\r\n    this.device.queue.submit([gpuCommands]);\r\n\r\n    // Read buffer.\r\n    await gpuReadBuffer.mapAsync(GPUMapMode.READ);\r\n    const arrayBuffer = gpuReadBuffer.getMappedRange();\r\n    var output = new Float32Array(arrayBuffer);\r\n    var context = this.outCanvasRef.current!.getContext('2d');\r\n    context!.drawImage(this.colormapImage, 0, 0);\r\n    var colorData = context!.getImageData(0, 0, 180, 1).data;\r\n    var imgData = context!.createImageData(width, height);\r\n    for (var i = 0; i < height; i++) {\r\n      for (var j = 0; j < width; j++) {\r\n        var index = j + i * width;\r\n        var colorIndex = Math.trunc(output[j + (height - 1 - i) * width] * 180) * 4;\r\n        imgData.data[index * 4] = colorData[colorIndex];\r\n        imgData.data[index * 4 + 1] = colorData[colorIndex + 1];\r\n        imgData.data[index * 4 + 2] = colorData[colorIndex + 2];\r\n        imgData.data[index * 4 + 3] = colorData[colorIndex + 3];\r\n      }\r\n    }\r\n    context!.putImageData(imgData, 0, 0);\r\n    this.outCanvasRef.current!.toBlob(function (b) { saveAs(b!, `terrain.png`); }, \"image/png\");\r\n  }\r\n}\r\nexport default Renderer;\r\n\r\n"]}