"use strict";exports.__esModule=!0;var wgsl_1=require("./wgsl"),TerrainGenerator=function(){function e(e,i,r){this.device=e,this.width=i,this.height=r,this.nodeDataBuffer=this.device.createBuffer({size:16,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),this.rangeBuffer=this.device.createBuffer({size:8,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC});var t="storage",a="uniform";this.computeTerrainBGLayout=e.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:t}},{binding:1,visibility:GPUShaderStage.COMPUTE,buffer:{type:a}},{binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{type:t}},{binding:3,visibility:GPUShaderStage.COMPUTE,buffer:{type:t}}]}),this.computeTerrainPipeline=e.createComputePipeline({layout:e.createPipelineLayout({bindGroupLayouts:[this.computeTerrainBGLayout]}),compute:{module:e.createShaderModule({code:wgsl_1.compute_terrain}),entryPoint:"main"}}),this.normalizeTerrainBGLayout=e.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:t}},{binding:1,visibility:GPUShaderStage.COMPUTE,buffer:{type:a}},{binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{type:t}}]}),this.normalizeTerrainPipeline=e.createComputePipeline({layout:e.createPipelineLayout({bindGroupLayouts:[this.normalizeTerrainBGLayout]}),compute:{module:e.createShaderModule({code:wgsl_1.normalize_terrain}),entryPoint:"main"}}),this.paramsBuffer=e.createBuffer({size:32,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),this.pixelValueBuffer=e.createBuffer({size:this.width*this.height*4,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC})}return e.prototype.computeTerrain=function(e,i,r,t,a){if(void 0===e&&(e=this.nodeDataBuffer),void 0===i&&(i=1e3),void 0===r&&(r=[0,0,1,1]),void 0===t&&(t=null),void 0===a&&(a=0),0!=a){this.nodeDataBuffer=e,this.rangeBuffer=t||this.device.createBuffer({size:8,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC});var u=this.device.createBuffer({size:32,usage:GPUBufferUsage.COPY_SRC,mappedAtCreation:!0}),s=u.getMappedRange();new Uint32Array(s).set([this.width,this.height,a]),new Float32Array(s).set([i,r[0],r[1],r[2],r[3]],3),u.unmap();var n=this.device.createCommandEncoder();n.copyBufferToBuffer(u,0,this.paramsBuffer,0,32);var f=this.device.createBindGroup({layout:this.computeTerrainBGLayout,entries:[{binding:0,resource:{buffer:this.nodeDataBuffer}},{binding:1,resource:{buffer:this.paramsBuffer}},{binding:2,resource:{buffer:this.pixelValueBuffer}},{binding:3,resource:{buffer:this.rangeBuffer}}]}),o=n.beginComputePass();o.setBindGroup(0,f),o.setPipeline(this.computeTerrainPipeline),o.dispatch(this.width,this.height,1);f=this.device.createBindGroup({layout:this.normalizeTerrainBGLayout,entries:[{binding:0,resource:{buffer:this.pixelValueBuffer}},{binding:1,resource:{buffer:this.paramsBuffer}},{binding:2,resource:{buffer:this.rangeBuffer}}]});o.setBindGroup(0,f),o.setPipeline(this.normalizeTerrainPipeline),o.dispatch(this.width,this.height,1),o.endPass(),this.device.queue.submit([n.finish()])}},e}();exports.default=TerrainGenerator;
//# sourceMappingURL=terrain_generator.min.js.map
