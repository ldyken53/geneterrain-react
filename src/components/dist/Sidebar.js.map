{"version":3,"sources":["Sidebar.tsx"],"names":[],"mappings":"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","file":"Sidebar.js","sourcesContent":["import React from 'react';\r\nimport {Form, Button} from \"react-bootstrap\";\r\nimport Collapsible from 'react-collapsible';\r\nimport { Matrix, matrix, subtract, eigs, column, min, max, index, sparse } from 'mathjs';\r\nimport Stats from \"../libs/stats.module\";\r\nimport * as Constant from \"../constant\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport XMLWriter from \"xml-writer\";\r\n\r\nconst headers = [\r\n  { label: \"Node\", key: \"Node\" },\r\n  { label: \"Edge\", key: \"Edge\" },\r\n  { label: \"FPS\", key: \"FPS\" },\r\n];\r\n\r\ntype SidebarProps = {\r\n  setNodeEdgeData: (nodeData: Array<number>, edgeData: Array<number>) => void;\r\n  setWidthFactor: (widthFactor: number) => void;\r\n  setPeakValue: (value: number) => void;\r\n  setValleyValue: (value: number) => void;\r\n  setCoolingFactor: (value: number) => void;\r\n  setIdealLength: (value: number) => void;\r\n  setColorValley: (value: number) => void;\r\n  setColorHill: (value: number) => void;\r\n  setColorMountain: (value: number) => void;\r\n  setGlobalRange: () => void;\r\n  toggleNodeLayer: () => void;\r\n  toggleTerrainLayer: () => void;\r\n  toggleEdgeLayer: () => void;\r\n  runForceDirected: () => void;\r\n  onSave: () => void;\r\n};\r\ntype SidebarState = {\r\n  nodeData: Array<number>;\r\n  edgeData: Array<number>;\r\n  laplacian: Matrix;\r\n  adjacencyMatrix: Array<Array<number>>;\r\n  e: {};\r\n  nodeCount: string;\r\n  edgeCount: string;\r\n  runBenchmark: boolean;\r\n  jsonFormat: boolean;\r\n  FPSData: Array<Array<string>>;\r\n};\r\ntype edge = {\r\n  source: number;\r\n  target: number;\r\n};\r\ntype node = {\r\n  name: string;\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\ntype nodeD3 = {\r\n  id: string;\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\ntype Graph = {\r\n  nodes: Array<node>;\r\n  edges: Array<edge>;\r\n};\r\nclass Sidebar extends React.Component<SidebarProps, SidebarState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nodeData: [],\r\n      edgeData: [],\r\n      nodeCount: \"\",\r\n      edgeCount: \"\",\r\n      laplacian: sparse([]),\r\n      adjacencyMatrix: [],\r\n      e: {},\r\n      jsonFormat: true,\r\n      runBenchmark: false,\r\n      FPSData: [],\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.readFiles = this.readFiles.bind(this);\r\n    this.generateRandomGraph = this.generateRandomGraph.bind(this);\r\n    this.generatePair = this.generatePair.bind(this);\r\n    this.generateRandomData = this.generateRandomData.bind(this);\r\n    this.refresh = this.refresh.bind(this);\r\n    this.runTest = this.runTest.bind(this);\r\n    this.runBenchmark = this.runBenchmark.bind(this);\r\n    this.testFunc = this.testFunc.bind(this);\r\n    this.sleep = this.sleep.bind(this);\r\n    this.storeFPSResult = this.storeFPSResult.bind(this);\r\n\r\n    // =========================================================\r\n    this.d3TimingStudy = this.d3TimingStudy.bind(this);\r\n    this.randomDataGen_Computation = this.randomDataGen_Computation.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.setNodeEdgeData(this.state.nodeData, this.state.edgeData);\r\n  }\r\n\r\n  sleep(time) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(resolve, time);\r\n    });\r\n  }\r\n\r\n  randomDataGen_Computation(nodeCount, edgeCount, width, height) {\r\n    var nodesWebGPU: Array<number> = [];\r\n    var edgesWebGPU: Array<number> = [];\r\n\r\n    var nodesD3: Array<nodeD3> = [];\r\n    var edgesD3: Array<edge> = [];\r\n\r\n    const dataWebGPU = {\r\n      nodes: nodesWebGPU,\r\n      edges: edgesWebGPU,\r\n    };\r\n\r\n    const dataD3 = {\r\n      nodes: nodesD3,\r\n      edges: edgesD3,\r\n    };\r\n\r\n    dataWebGPU.nodes = new Array(4 * nodeCount).fill(0);\r\n    dataWebGPU.edges = new Array(2 * edgeCount).fill(0);\r\n\r\n    for (let i = 0; i < nodeCount; i++) {\r\n      let x = Math.random();\r\n      let y = Math.random();\r\n      dataD3.nodes[i] = { id: i.toString(), x: x * width, y: y * height };\r\n      dataWebGPU.nodes[4 * i] = 0;\r\n      dataWebGPU.nodes[4 * i + 1] = x;\r\n      dataWebGPU.nodes[4 * i + 2] = y;\r\n      dataWebGPU.nodes[4 * i + 3] = 1;\r\n    }\r\n    \r\n\r\n    const linkSet = new Set();\r\n\r\n    for (let i = 0; i < edgeCount; i++) {\r\n      let pair;\r\n      do {\r\n        pair = this.generatePair(0, nodeCount);\r\n      } while (linkSet.has(`${pair.source}_${pair.target}`));\r\n      linkSet.add(`${pair.source}_${pair.target}`);\r\n      linkSet.add(`${pair.target}_${pair.source}`);\r\n    \r\n      dataD3.edges[i] = {\r\n        source: pair.source,\r\n        target: pair.target,\r\n      };\r\n      dataWebGPU.edges[2 * i] = pair.source;\r\n      dataWebGPU.edges[2 * i + 1] = pair.target;\r\n    }\r\n    let dataCombined = {\r\n      dataD3,\r\n      dataWebGPU,\r\n    };\r\n    return dataCombined;\r\n  }\r\n\r\n  async d3TimingStudy(event: React.MouseEvent) {\r\n    event.preventDefault();\r\n    let width = 800;\r\n    let height = 800;\r\n    let nodeCount = 100;\r\n    let density = 20;\r\n    let edgeCount = nodeCount * density;\r\n    let renderingCanvas = document.querySelectorAll(\"canvas\")[0];\r\n    let data = this.randomDataGen_Computation(\r\n      nodeCount,\r\n      edgeCount,\r\n      width,\r\n      height\r\n    );\r\n    console.log(data);\r\n  }\r\n\r\n  async runBenchmark(event: React.MouseEvent) {\r\n    event.preventDefault();\r\n    const nodeCounts = [1e2, 5e2, 1e3, 2e3, 5e3, 1e4, 2e4, 5e4, 1e5, 2e5, 1e6];\r\n    const density = 20;\r\n    const edgeCounts = nodeCounts.map((n) => n * density);\r\n    let stats = Stats();\r\n    stats.showPanel(0);\r\n    stats.dom.setAttribute(\"class\", \"status\");\r\n    document.body.appendChild(stats.dom);\r\n    this.setState({ runBenchmark: true });\r\n    let renderingCanvas = document.querySelectorAll(\"canvas\")[0];\r\n    renderingCanvas.width = 500;\r\n    renderingCanvas.height = 500;\r\n    renderingCanvas.style.width = \"500px\";\r\n    renderingCanvas.style.height = \"500px\";\r\n    // const testCase = {\r\n    //   nodeCounts,\r\n    //   edgeCounts,\r\n    // };\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n      // let stepCount = 0;\r\n      const nCount = nodeCounts[i].toString();\r\n      const eCount = edgeCounts[i].toString();\r\n\r\n      this.setState({ nodeCount: nCount });\r\n      this.setState({ edgeCount: eCount });\r\n\r\n      let data = this.generateRandomData(nodeCounts, edgeCounts, i);\r\n      this.setState({ nodeData: data.nodes });\r\n      this.setState({ edgeData: data.edges });\r\n      // this.props.setNodeEdgeData(this.state.nodeData, this.state.edgeData);\r\n      await this.testFunc(data, stats);\r\n    }\r\n\r\n    this.setState({ runBenchmark: false });\r\n    renderingCanvas.width = 800;\r\n    renderingCanvas.height = 800;\r\n    renderingCanvas.style.width = \"800px\";\r\n    renderingCanvas.style.height = \"800px\";\r\n  }\r\n\r\n  generatePair(min, max) {\r\n    function randRange(min, max) {\r\n      return min + Math.floor(Math.random() * (max - min));\r\n    }\r\n    const source = randRange(min, max);\r\n    let target = randRange(min, max);\r\n    while (source === target) {\r\n      target = randRange(min, max);\r\n    }\r\n    return {\r\n      source: source,\r\n      target: target,\r\n    };\r\n  }\r\n\r\n  generateRandomData(nodeCounts, edgeCounts, stepCount) {\r\n    let nodeCount = nodeCounts[stepCount];\r\n    let edgeCount = edgeCounts[stepCount];\r\n\r\n    let generatedData = this.generateRandomGraph(nodeCount, edgeCount);\r\n    return generatedData;\r\n  }\r\n\r\n  generateRandomGraph(nodeCount, edgeCount) {\r\n    var nodes: Array<number> = [];\r\n    var edges: Array<number> = [];\r\n    const data = {\r\n      nodes: nodes,\r\n      edges: edges,\r\n    };\r\n\r\n    data.nodes = Array(4 * nodeCount).fill(0);\r\n\r\n    for (let i = 0; i < 4 * nodeCount; i = i + 4) {\r\n      data.nodes[i] = 0;\r\n      data.nodes[i + 1] = Math.random();\r\n      data.nodes[i + 2] = Math.random();\r\n      data.nodes[i + 3] = 1;\r\n    }\r\n    const edgeHashMap = new Map();\r\n\r\n    data.edges = Array(2 * edgeCount).fill(0);\r\n    let pair;\r\n\r\n    for (let i = 0; i < 2 * edgeCount; i = i + 2) {\r\n      do {\r\n        pair = this.generatePair(0, nodeCount);\r\n      } while (edgeHashMap.has(`${pair.source}_${pair.target}`));\r\n      edgeHashMap.set(`${pair.source}_${pair.target}`, true);\r\n      edgeHashMap.set(`${pair.target}_${pair.source}`, true);\r\n      data.edges[i] = pair.source;\r\n      data.edges[i + 1] = pair.target;\r\n    }\r\n    return data;\r\n  }\r\n\r\n  refresh(length) {\r\n    var nodes: Array<number> = [];\r\n    for (let i = 0; i < 4 * length; i = i + 4) {\r\n      nodes[i + 1] = Math.random();\r\n      nodes[i + 2] = Math.random();\r\n    }\r\n    this.setState({ nodeData: nodes });\r\n    this.props.setNodeEdgeData(nodes, this.state.edgeData);\r\n  }\r\n\r\n  storeFPSResult(nodeLength, edgeLength, fps) {\r\n    nodeLength = nodeLength.toString();\r\n    edgeLength = edgeLength.toString();\r\n    fps = fps.toString();\r\n\r\n    this.setState({\r\n      FPSData: [...this.state.FPSData, [nodeLength, edgeLength, fps]],\r\n    });\r\n    console.log(this.state.FPSData);\r\n  }\r\n\r\n  async testFunc(data, stats) {\r\n    let nodeLength = data.nodes.length / 4;\r\n    let edgeLength = data.edges.length / 2;\r\n    await this.runTest(nodeLength, edgeLength, stats);\r\n  }\r\n\r\n  async runTest(nodeLength, edgeLength, stats) {\r\n    let requestId;\r\n    const refreshing = () => {\r\n      stats.begin();\r\n      this.refresh(nodeLength);\r\n      stats.end();\r\n      requestId = requestAnimationFrame(refreshing);\r\n    };\r\n    refreshing();\r\n    await this.sleep(Constant.TIME_FOR_EACH_TEST);\r\n    let FPS_Array = stats.getFPSHistory();\r\n    console.log(FPS_Array);\r\n    let FPS = FPS_Array.pop();\r\n\r\n    this.storeFPSResult(nodeLength, edgeLength, FPS);\r\n    cancelAnimationFrame(requestId);\r\n    return;\r\n  }\r\n  readFiles(event: React.ChangeEvent<HTMLInputElement>) {\r\n    const files: FileList = event.target.files!;\r\n    console.log(files);\r\n    var nodeIDToValue = {};\r\n    // var nodeIDToPos = {};\r\n    var nodeIDToIndex = {};\r\n    var nodeData: Array<number> = [];\r\n    var edgeData: Array<number> = [];\r\n    var degreeMatrix: Array<Array<number>> = [];\r\n    var adjacencyMatrix: Array<Array<number>> = [];\r\n    const edgeReader = new FileReader();\r\n    edgeReader.onload = (event) => {\r\n      var edgeRaw = (edgeReader.result as string).split(\"\\n\");\r\n      for (var element of edgeRaw) {\r\n        var parts = element.split(\"\\t\");\r\n        if (nodeIDToValue[parts[0]] && nodeIDToValue[parts[1]]) {\r\n          edgeData.push(nodeIDToIndex[parts[0]], nodeIDToIndex[parts[1]]);\r\n          degreeMatrix[nodeIDToIndex[parts[0]]][nodeIDToIndex[parts[0]]] += 1;\r\n          degreeMatrix[nodeIDToIndex[parts[1]]][nodeIDToIndex[parts[1]]] += 1;\r\n          adjacencyMatrix[nodeIDToIndex[parts[0]]][\r\n            nodeIDToIndex[parts[1]]\r\n          ] += 1;\r\n          adjacencyMatrix[nodeIDToIndex[parts[1]]][\r\n            nodeIDToIndex[parts[0]]\r\n          ] += 1;\r\n        }\r\n      }\r\n      this.setState({ edgeData: edgeData });\r\n      var laplacian: Matrix = subtract(\r\n        sparse(degreeMatrix),\r\n        sparse(adjacencyMatrix)\r\n      ) as Matrix;\r\n      console.log(laplacian);\r\n      this.setState({ laplacian: laplacian, adjacencyMatrix: adjacencyMatrix });\r\n    };\r\n    const layoutReader = new FileReader();\r\n    layoutReader.onload = (event) => {\r\n      var layoutData = (layoutReader.result as string).split(\"\\n\");\r\n      for (var element of layoutData) {\r\n        var parts = element.split(\"\\t\");\r\n        if (nodeIDToValue[parts[0]]) {\r\n          nodeIDToIndex[parts[0]] = nodeData.length / 4;\r\n          // Pushes values to node data in order of struct for WebGPU:\r\n          // nodeValue, nodeX, nodeY, nodeSize\r\n          nodeData.push(\r\n            parseFloat(nodeIDToValue[parts[0]]),\r\n            parseFloat(parts[1]),\r\n            parseFloat(parts[2]),\r\n            parseFloat(parts[3])\r\n          );\r\n          // nodeIDToPos[parts[0]] = [parseFloat(parts[1]) * 2.0 - 1, parseFloat(parts[2]) * 2.0 - 1];\r\n        }\r\n      }\r\n      this.setState({ nodeData: nodeData });\r\n      for (var i = 0; i < nodeData.length / 4; i++) {\r\n        degreeMatrix.push([]);\r\n        adjacencyMatrix.push([]);\r\n        for (var j = 0; j < nodeData.length / 4; j++) {\r\n          degreeMatrix[i].push(0);\r\n          adjacencyMatrix[i].push(0);\r\n        }\r\n      }\r\n      edgeReader.readAsText(files[2]);\r\n    };\r\n    const nodeReader = new FileReader();\r\n    nodeReader.onload = (event) => {\r\n      var rawNodes = (nodeReader.result as string).split(\"\\n\");\r\n      for (var element of rawNodes) {\r\n        nodeIDToValue[element.split(\"\\t\")[0]] = element.split(\"\\t\")[1];\r\n      }\r\n      console.log(nodeIDToValue);\r\n      layoutReader.readAsText(files[1]);\r\n    };\r\n    nodeReader.readAsText(files[0]);\r\n  }\r\n\r\n  readJson(event: React.ChangeEvent<HTMLInputElement>) {\r\n    const files: FileList = event.target.files!;\r\n    const jsonReader = new FileReader();\r\n    var nodeData: Array<number> = [];\r\n    var edgeData: Array<number> = [];\r\n    jsonReader.onload = (event) => {\r\n      var graph: Graph = JSON.parse(jsonReader.result as string);\r\n      console.log(graph);\r\n      for (var i = 0; i < graph.nodes.length; i++) {\r\n        if (graph.nodes[i].x) {\r\n          nodeData.push(0.0, graph.nodes[i].x, graph.nodes[i].y, 1.0);\r\n        } else {\r\n          nodeData.push(0.0, Math.random(), Math.random(), 1.0);\r\n        }\r\n      }\r\n      for (var i = 0; i < graph.edges.length; i++) {\r\n        var source = graph.edges[i].source;\r\n        var target = graph.edges[i].target;\r\n        edgeData.push(source, target);\r\n      }\r\n      this.setState({ nodeData: nodeData, edgeData: edgeData });\r\n    };\r\n    jsonReader.readAsText(files[0]);\r\n  }\r\n\r\n  applySpectral() {\r\n    var e = eigs(this.state.laplacian);\r\n    console.log(e);\r\n    var nodeData = this.state.nodeData;\r\n    var x = column(e.vectors, 1) as Matrix;\r\n    var y = column(e.vectors, 2) as Matrix;\r\n    var x_max = max(x);\r\n    var y_max = max(y);\r\n    var x_min = min(x);\r\n    var y_min = min(y);\r\n    for (var i = 0; i < nodeData.length / 4; i++) {\r\n      nodeData[i * 4 + 1] = (x.get([i, 0]) - x_min) / (x_max - x_min);\r\n      nodeData[i * 4 + 2] = (y.get([i, 0]) - y_min) / (y_max - y_min);\r\n    }\r\n    this.setState({ nodeData: nodeData });\r\n    this.props.setNodeEdgeData(nodeData, this.state.edgeData);\r\n  }\r\n\r\n  onSaveXML() {\r\n    var xw = new XMLWriter(true);\r\n    xw.startDocument();\r\n    xw.startElement(\"GeneTerrain\");\r\n    xw.startElement(\"Nodes\");\r\n    for (var i = 0; i < this.state.nodeData.length; i += 4) {\r\n      xw.startElement(\"Node\");\r\n      xw.writeAttribute(\"NodeID\", i / 4);\r\n      xw.writeAttribute(\"InputValue\", this.state.nodeData[i]);\r\n      xw.writeAttribute(\"InputWeight\", this.state.nodeData[i + 3]);\r\n      xw.writeAttribute(\"NodeBackendX\", this.state.nodeData[i + 1]);\r\n      xw.writeAttribute(\"NodeBackendY\", this.state.nodeData[i + 2]);\r\n      xw.endElement(\"Node\");\r\n    }\r\n    xw.endElement(\"Nodes\");\r\n    xw.startElement(\"Edges\");\r\n    for (var i = 0; i < this.state.edgeData.length; i += 2) {\r\n      xw.startElement(\"Edge\");\r\n      xw.writeAttribute(\"BeginID\", this.state.edgeData[i]);\r\n      xw.writeAttribute(\"EndID\", this.state.edgeData[i + 1]);\r\n      xw.endElement(\"Edge\");\r\n    }\r\n    xw.endElement(\"Edges\");\r\n    xw.endDocument();\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([xw.toString()], { type: \"application/xml\" });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"terrain.xml\";\r\n    document.body.appendChild(element); // Required for this to work in FireFox\r\n    element.click();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <hr />\r\n        <Button className=\"benchmark_test\" onClick={this.runBenchmark}>\r\n          Run Benchmark\r\n        </Button>\r\n        <div style={{ margin: 10, color: \"white\" }}>\r\n          <p>Node count: {this.state.nodeCount}</p>\r\n          <p>Edge count: {this.state.edgeCount}</p>\r\n        </div>\r\n        <CSVLink data={this.state.FPSData}>Download FPS data</CSVLink>\r\n        <hr />\r\n\r\n        <Button className=\"d3Timing_test\" onClick={this.d3TimingStudy}>\r\n          Run D3\r\n        </Button>\r\n\r\n        <Form style={{ color: \"white\" }} onSubmit={this.handleSubmit}>\r\n          <Form.Group controlId=\"formFile\" className=\"mt-3 mb-3\">\r\n            <Form.Check\r\n              defaultChecked={true}\r\n              onClick={() =>\r\n                this.setState({ jsonFormat: !this.state.jsonFormat })\r\n              }\r\n              type=\"checkbox\"\r\n              label=\"Json Format\"\r\n            ></Form.Check>\r\n            <Form.Label>Select Example Files</Form.Label>\r\n            <Form.Control\r\n              className=\"form-control\"\r\n              type=\"file\"\r\n              multiple\r\n              onChange={(e) => {\r\n                if (this.state.jsonFormat) {\r\n                  this.readJson(e as React.ChangeEvent<HTMLInputElement>);\r\n                } else {\r\n                  this.readFiles(e as React.ChangeEvent<HTMLInputElement>);\r\n                }\r\n              }}\r\n            />\r\n            <Button\r\n              className=\"mt-2\"\r\n              type=\"submit\"\r\n              variant=\"secondary\"\r\n              value=\"Submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form.Group>\r\n          <Collapsible trigger=\"Terrain Options\">\r\n            <Form.Group>\r\n              <Form.Label> Width Factor </Form.Label>\r\n              <br />\r\n              <input\r\n                type=\"range\"\r\n                defaultValue={1000}\r\n                min={0}\r\n                max={2000}\r\n                onChange={(e) =>\r\n                  this.props.setWidthFactor(parseFloat(e.target.value))\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label> Peak and Valley Values </Form.Label>\r\n              <br />\r\n              <input\r\n                type=\"range\"\r\n                defaultValue={0.8}\r\n                min={0.5}\r\n                max={1}\r\n                step={0.01}\r\n                onChange={(e) =>\r\n                  this.props.setPeakValue(parseFloat(e.target.value))\r\n                }\r\n              />\r\n              <input\r\n                type=\"range\"\r\n                defaultValue={0.2}\r\n                min={0}\r\n                max={0.5}\r\n                step={0.01}\r\n                onChange={(e) =>\r\n                  this.props.setValleyValue(parseFloat(e.target.value))\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Check\r\n                defaultChecked={true}\r\n                onClick={(e) => this.props.setGlobalRange()}\r\n                type=\"checkbox\"\r\n                label=\"Use Global Min/Max\"\r\n              ></Form.Check>\r\n            </Form.Group>\r\n          </Collapsible>\r\n          <Collapsible trigger=\"Colormap Options\">\r\n            <Form.Row>\r\n              <div>Valley</div>\r\n              <input\r\n                type=\"range\"\r\n                defaultValue={45}\r\n                min={1}\r\n                max={60}\r\n                step={1}\r\n                onChange={(e) =>\r\n                  this.props.setColorValley(parseFloat(e.target.value))\r\n                }\r\n              />\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <div>Hill</div>\r\n              <input\r\n                type=\"range\"\r\n                defaultValue={90}\r\n                min={61}\r\n                max={120}\r\n                step={1}\r\n                onChange={(e) =>\r\n                  this.props.setColorHill(parseFloat(e.target.value))\r\n                }\r\n              />\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <div>Mountain</div>\r\n              <input\r\n                type=\"range\"\r\n                defaultValue={135}\r\n                min={121}\r\n                max={180}\r\n                step={1}\r\n                onChange={(e) =>\r\n                  this.props.setColorMountain(parseFloat(e.target.value))\r\n                }\r\n              />\r\n            </Form.Row>\r\n          </Collapsible>\r\n          <Collapsible trigger=\"Layers\">\r\n            <Form.Check\r\n              defaultChecked={false}\r\n              onClick={(e) => this.props.toggleTerrainLayer()}\r\n              type=\"checkbox\"\r\n              label=\"Terrain Layer\"\r\n            />\r\n            <Form.Check\r\n              defaultChecked={true}\r\n              onClick={(e) => this.props.toggleNodeLayer()}\r\n              type=\"checkbox\"\r\n              label=\"Node Layer\"\r\n            />\r\n            <Form.Check\r\n              defaultChecked={true}\r\n              onClick={(e) => this.props.toggleEdgeLayer()}\r\n              type=\"checkbox\"\r\n              label=\"Edge Layer\"\r\n            />\r\n          </Collapsible>\r\n          <Collapsible trigger=\"Force Directed Options\">\r\n            <Form.Label> Ideal Length and Cooling Factor </Form.Label>\r\n            <br />\r\n            <input\r\n              type=\"range\"\r\n              defaultValue={0.05}\r\n              min={0.001}\r\n              max={0.1}\r\n              step={0.001}\r\n              onChange={(e) =>\r\n                this.props.setIdealLength(parseFloat(e.target.value))\r\n              }\r\n            />\r\n            <input\r\n              type=\"range\"\r\n              defaultValue={0.9}\r\n              min={0.75}\r\n              max={0.999}\r\n              step={0.001}\r\n              onChange={(e) =>\r\n                this.props.setCoolingFactor(parseFloat(e.target.value))\r\n              }\r\n            />\r\n          </Collapsible>\r\n          <Button onClick={(e) => this.props.onSave()}>Save Terrain</Button>\r\n          <br />\r\n          <Button onClick={(e) => this.applySpectral()}>\r\n            Apply Spectral Layout\r\n          </Button>\r\n          <br />\r\n          <Button onClick={(e) => this.props.runForceDirected()}>\r\n            Run Force Directed Layout\r\n          </Button>\r\n          <br />\r\n          <Button onClick={(e) => this.onSaveXML()}>Save Terrain to XML</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;"]}