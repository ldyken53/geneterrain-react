{"version":3,"sources":["Page.tsx"],"names":["react_1","require","Sidebar_1","react_2","render_1","rainbow_png_1","rainbow2_png_1","react_bootstrap_1","react_select_1","importAll","r","images","keys","map","item","index","replace","colormaps","context","colormap_list","console","log","Page","_super","props","_this","call","this","state","widthFactor","canvasRef","createRef","outCanvasRef","colorCanvasRef","fpsRef","iterRef","colorValley","colorHill","colorMountain","renderer","moved","__extends","prototype","componentDidMount","navigator","gpu","requestAdapter","powerPreference","adapter","_a","sent","requestDevice","requiredLimits","maxStorageBufferBindingSize","limits","device","colormapImage","Image","src","decode","createImageBitmap","imageBitmap","setState","setNodeEdgeData","nodeData","edgeData","setWidthFactor","setPeakValue","value","setValleyValue","setIdealLength","setCoolingFactor","setGlobalRange","setColorValley","updateColormap","setColorHill","setColorMountain","toggleNodeLayer","toggleTerrainLayer","toggleEdgeLayer","colorCanvas","current","getContext","drawImage","data","getImageData","i","putImageData","url","toDataURL","setColormap","changeColormap","colormap","runForceDirected","onSave","render","createElement","className","bind","placeholder","onChange","e","options","cm","label","Form","Label","ref","id","width","height","hidden","Component","exports"],"mappings":"kyDAAA,IAAAA,QAAAC,QAAA,SACAC,UAAAD,QAAA,aACAE,QAAAF,QAAA,SACAG,SAAAH,QAAA,oBACAI,cAAAJ,QAAA,iBACAK,eAAAL,QAAA,kBACAM,kBAAAN,QAAA,mBACAO,eAAAP,QAAA,gBAEA,SAASQ,UAAUC,GACjB,IAAIC,EAAS,GAIb,OAHAD,EAAEE,OAAOC,IAAI,SAACC,EAAMC,GAClBJ,EAAOG,EAAKE,QAAQ,KAAM,IAAIA,QAAQ,OAAQ,KAAON,EAAEI,KAElDH,EAGT,IAAMM,UAAYR,UAChBR,QAAQiB,QAAQ,gBAAgB,EAAO,uBAEnCC,cAAgB,CACpB,QACA,UACA,SACA,UACA,UACA,WACA,mBACA,QACA,QACA,OACA,OACA,OACA,SACA,OACA,SACA,QACA,OACA,UACA,OACA,OACA,OACA,SACA,OACA,OACA,UACA,OACA,OACA,OACA,SACA,SACA,OACA,WACA,SACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,MACA,MACA,OACA,WACA,SACA,YACA,OACA,aACA,YACA,YACA,YACA,eACA,aACA,YACA,UACA,WACA,OACA,MACA,MACA,MACA,gBACA,QACA,OACA,QACA,UACA,UACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,OACA,OACA,OACA,QACA,QACA,SACA,SACA,UACA,YACA,WACA,YACA,YACA,aACA,qBACA,UACA,UACA,SACA,SACA,SACA,WACA,SACA,WACA,UACA,SACA,YACA,SACA,SACA,SACA,WACA,SACA,SACA,YACA,SACA,SACA,SACA,WACA,WACA,SACA,aACA,WACA,SACA,WACA,WACA,WACA,WACA,WACA,WACA,SACA,QACA,QACA,SACA,aACA,WACA,cACA,SACA,eACA,cACA,cACA,cACA,iBACA,eACA,cACA,YACA,aACA,SACA,QACA,QACA,QACA,kBACA,UACA,SACA,UACA,YACA,YACA,WACA,WACA,YACA,WACA,WACA,UACA,WACA,YACA,YACA,SACA,SACA,SACA,UACA,UACA,WACA,YAEFC,QAAQC,IAA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","file":"Page.min.js","sourcesContent":["import React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport { createRef, MutableRefObject } from 'react';\r\nimport Renderer from \"../webgpu/render\";\r\nimport colormap from './rainbow.png';\r\nimport colormap2 from './rainbow2.png';\r\nimport { Form } from 'react-bootstrap';\r\nimport Select from 'react-select';\r\nimport { boolean } from \"mathjs\";\r\nfunction importAll(r) {\r\n  let images = {};\r\n  r.keys().map((item, index) => {\r\n    images[item.replace(\"./\", \"\").replace(\".png\", \"\")] = r(item);\r\n  });\r\n  return images;\r\n}\r\n\r\nconst colormaps = importAll(\r\n  require.context(\"../colormaps\", false, /\\.(png|jpe?g|svg)$/)\r\n);\r\nconst colormap_list = [\r\n  \"magma\",\r\n  \"inferno\",\r\n  \"plasma\",\r\n  \"viridis\",\r\n  \"cividis\",\r\n  \"twilight\",\r\n  \"twilight_shifted\",\r\n  \"turbo\",\r\n  \"Blues\",\r\n  \"BrBG\",\r\n  \"BuGn\",\r\n  \"BuPu\",\r\n  \"CMRmap\",\r\n  \"GnBu\",\r\n  \"Greens\",\r\n  \"Greys\",\r\n  \"OrRd\",\r\n  \"Oranges\",\r\n  \"PRGn\",\r\n  \"PiYG\",\r\n  \"PuBu\",\r\n  \"PuBuGn\",\r\n  \"PuOr\",\r\n  \"PuRd\",\r\n  \"Purples\",\r\n  \"RdBu\",\r\n  \"RdGy\",\r\n  \"RdPu\",\r\n  \"RdYlBu\",\r\n  \"RdYlGn\",\r\n  \"Reds\",\r\n  \"Spectral\",\r\n  \"Wistia\",\r\n  \"YlGn\",\r\n  \"YlGnBu\",\r\n  \"YlOrBr\",\r\n  \"YlOrRd\",\r\n  \"afmhot\",\r\n  \"autumn\",\r\n  \"binary\",\r\n  \"bone\",\r\n  \"brg\",\r\n  \"bwr\",\r\n  \"cool\",\r\n  \"coolwarm\",\r\n  \"copper\",\r\n  \"cubehelix\",\r\n  \"flag\",\r\n  \"gist_earth\",\r\n  \"gist_gray\",\r\n  \"gist_heat\",\r\n  \"gist_ncar\",\r\n  \"gist_rainbow\",\r\n  \"gist_stern\",\r\n  \"gist_yarg\",\r\n  \"gnuplot\",\r\n  \"gnuplot2\",\r\n  \"gray\",\r\n  \"hot\",\r\n  \"hsv\",\r\n  \"jet\",\r\n  \"nipy_spectral\",\r\n  \"ocean\",\r\n  \"pink\",\r\n  \"prism\",\r\n  \"rainbow\",\r\n  \"seismic\",\r\n  \"spring\",\r\n  \"summer\",\r\n  \"terrain\",\r\n  \"winter\",\r\n  \"Accent\",\r\n  \"Dark2\",\r\n  \"Paired\",\r\n  \"Pastel1\",\r\n  \"Pastel2\",\r\n  \"Set1\",\r\n  \"Set2\",\r\n  \"Set3\",\r\n  \"tab10\",\r\n  \"tab20\",\r\n  \"tab20b\",\r\n  \"tab20c\",\r\n  \"magma_r\",\r\n  \"inferno_r\",\r\n  \"plasma_r\",\r\n  \"viridis_r\",\r\n  \"cividis_r\",\r\n  \"twilight_r\",\r\n  \"twilight_shifted_r\",\r\n  \"turbo_r\",\r\n  \"Blues_r\",\r\n  \"BrBG_r\",\r\n  \"BuGn_r\",\r\n  \"BuPu_r\",\r\n  \"CMRmap_r\",\r\n  \"GnBu_r\",\r\n  \"Greens_r\",\r\n  \"Greys_r\",\r\n  \"OrRd_r\",\r\n  \"Oranges_r\",\r\n  \"PRGn_r\",\r\n  \"PiYG_r\",\r\n  \"PuBu_r\",\r\n  \"PuBuGn_r\",\r\n  \"PuOr_r\",\r\n  \"PuRd_r\",\r\n  \"Purples_r\",\r\n  \"RdBu_r\",\r\n  \"RdGy_r\",\r\n  \"RdPu_r\",\r\n  \"RdYlBu_r\",\r\n  \"RdYlGn_r\",\r\n  \"Reds_r\",\r\n  \"Spectral_r\",\r\n  \"Wistia_r\",\r\n  \"YlGn_r\",\r\n  \"YlGnBu_r\",\r\n  \"YlOrBr_r\",\r\n  \"YlOrRd_r\",\r\n  \"afmhot_r\",\r\n  \"autumn_r\",\r\n  \"binary_r\",\r\n  \"bone_r\",\r\n  \"brg_r\",\r\n  \"bwr_r\",\r\n  \"cool_r\",\r\n  \"coolwarm_r\",\r\n  \"copper_r\",\r\n  \"cubehelix_r\",\r\n  \"flag_r\",\r\n  \"gist_earth_r\",\r\n  \"gist_gray_r\",\r\n  \"gist_heat_r\",\r\n  \"gist_ncar_r\",\r\n  \"gist_rainbow_r\",\r\n  \"gist_stern_r\",\r\n  \"gist_yarg_r\",\r\n  \"gnuplot_r\",\r\n  \"gnuplot2_r\",\r\n  \"gray_r\",\r\n  \"hot_r\",\r\n  \"hsv_r\",\r\n  \"jet_r\",\r\n  \"nipy_spectral_r\",\r\n  \"ocean_r\",\r\n  \"pink_r\",\r\n  \"prism_r\",\r\n  \"rainbow_r\",\r\n  \"seismic_r\",\r\n  \"spring_r\",\r\n  \"summer_r\",\r\n  \"terrain_r\",\r\n  \"winter_r\",\r\n  \"Accent_r\",\r\n  \"Dark2_r\",\r\n  \"Paired_r\",\r\n  \"Pastel1_r\",\r\n  \"Pastel2_r\",\r\n  \"Set1_r\",\r\n  \"Set2_r\",\r\n  \"Set3_r\",\r\n  \"tab10_r\",\r\n  \"tab20_r\",\r\n  \"tab20b_r\",\r\n  \"tab20c_r\",\r\n];\r\nconsole.log(colormaps[\"magma\"].default);\r\nconsole.log(colormap);\r\n\r\ntype PageState = {\r\n  widthFactor: number;\r\n  canvasRef: MutableRefObject<HTMLCanvasElement | null>;\r\n  outCanvasRef: MutableRefObject<HTMLCanvasElement | null>;\r\n  colorCanvasRef: MutableRefObject<HTMLCanvasElement | null>;\r\n  fpsRef: MutableRefObject<HTMLLabelElement | null>;\r\n  iterRef: MutableRefObject<HTMLLabelElement | null>;\r\n  colorValley: number;\r\n  colorHill: number;\r\n  colorMountain: number;\r\n  renderer: Renderer | null;\r\n  moved: boolean;\r\n};\r\nclass Page extends React.Component<{}, PageState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widthFactor: 1000,\r\n      canvasRef: createRef<HTMLCanvasElement | null>(),\r\n      outCanvasRef: createRef<HTMLCanvasElement | null>(),\r\n      colorCanvasRef: createRef<HTMLCanvasElement | null>(),\r\n      fpsRef: createRef<HTMLLabelElement | null>(),\r\n      iterRef: createRef<HTMLLabelElement | null>(),\r\n      colorValley: 45,\r\n      colorHill: 90,\r\n      colorMountain: 135,\r\n      renderer: null,\r\n      moved: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const adapter = (await navigator.gpu.requestAdapter({\r\n      powerPreference: \"high-performance\",\r\n    }))!;\r\n\r\n    const device = await adapter.requestDevice({\r\n      requiredLimits: {\r\n        maxStorageBufferBindingSize: adapter.limits.maxStorageBufferBindingSize,\r\n      },\r\n    });\r\n\r\n    var colormapImage = new Image();\r\n    colormapImage.src = colormap;\r\n    await colormapImage.decode();\r\n    const imageBitmap = await createImageBitmap(colormapImage);\r\n    this.setState({\r\n      renderer: new Renderer(\r\n        adapter,\r\n        device,\r\n        this.state.canvasRef,\r\n        imageBitmap,\r\n        colormapImage,\r\n        this.state.outCanvasRef,\r\n        this.state.fpsRef,\r\n        this.state.iterRef\r\n      ),\r\n    });\r\n  }\r\n\r\n  async setNodeEdgeData(nodeData: Array<number>, edgeData: Array<number>) {\r\n    await this.state.renderer!.setNodeEdgeData(nodeData, edgeData);\r\n  }\r\n\r\n  setWidthFactor(widthFactor: number) {\r\n    this.state.renderer!.setWidthFactor(widthFactor);\r\n  }\r\n\r\n  setPeakValue(value: number) {\r\n    this.state.renderer!.setPeakValue(value);\r\n  }\r\n\r\n  setValleyValue(value: number) {\r\n    this.state.renderer!.setValleyValue(value);\r\n  }\r\n\r\n  setIdealLength(value: number) {\r\n    this.state.renderer!.setIdealLength(value);\r\n  }\r\n\r\n  setCoolingFactor(value: number) {\r\n    this.state.renderer!.setCoolingFactor(value);\r\n  }\r\n\r\n  setGlobalRange() {\r\n    this.state.renderer!.setGlobalRange();\r\n  }\r\n\r\n  setColorValley(value: number) {\r\n    this.setState({ colorValley: value });\r\n    this.updateColormap();\r\n  }\r\n\r\n  setColorHill(value: number) {\r\n    this.setState({ colorHill: value });\r\n    this.updateColormap();\r\n  }\r\n\r\n  setColorMountain(value: number) {\r\n    this.setState({ colorMountain: value });\r\n    this.updateColormap();\r\n  }\r\n\r\n  toggleNodeLayer() {\r\n    this.state.renderer!.toggleNodeLayer();\r\n  }\r\n\r\n  toggleTerrainLayer() {\r\n    this.state.renderer!.toggleTerrainLayer();\r\n  }\r\n\r\n  toggleEdgeLayer() {\r\n    this.state.renderer!.toggleEdgeLayer();\r\n  }\r\n\r\n  async updateColormap() {\r\n    var colormapImage = new Image();\r\n    colormapImage.src = colormap2;\r\n    await colormapImage.decode();\r\n    var colorCanvas = this.state.colorCanvasRef.current!;\r\n    var context = colorCanvas.getContext(\"2d\")!;\r\n    context.drawImage(colormapImage, 0, 0);\r\n    let data = context.getImageData(0, 0, 180, 1);\r\n    for (var i = 0; i < this.state.colorValley; i++) {\r\n      data.data[i * 4] = 0;\r\n      data.data[i * 4 + 1] = 0 + (255 / this.state.colorValley) * i;\r\n      data.data[i * 4 + 2] = 255;\r\n      data.data[i * 4 + 3] = 255;\r\n    }\r\n    for (var i = this.state.colorValley; i < this.state.colorHill; i++) {\r\n      data.data[i * 4] = 0;\r\n      data.data[i * 4 + 1] = 255;\r\n      data.data[i * 4 + 2] =\r\n        255 -\r\n        (255 / (this.state.colorHill - this.state.colorValley)) *\r\n          (i - this.state.colorValley);\r\n      data.data[i * 4 + 3] = 255;\r\n    }\r\n    for (var i = this.state.colorHill; i < this.state.colorMountain; i++) {\r\n      data.data[i * 4] =\r\n        0 +\r\n        (255 / (this.state.colorMountain - this.state.colorHill)) *\r\n          (i - this.state.colorHill);\r\n      data.data[i * 4 + 1] = 255;\r\n      data.data[i * 4 + 2] = 0;\r\n      data.data[i * 4 + 3] = 255;\r\n    }\r\n    for (var i = this.state.colorMountain; i < 180; i++) {\r\n      data.data[i * 4] = 255;\r\n      data.data[i * 4 + 1] =\r\n        255 -\r\n        (255 / (180 - this.state.colorMountain)) *\r\n          (i - this.state.colorMountain);\r\n      data.data[i * 4 + 2] = 0;\r\n      data.data[i * 4 + 3] = 255;\r\n    }\r\n    context.putImageData(data, 0, 0);\r\n    let url = colorCanvas.toDataURL();\r\n    colormapImage.src = url;\r\n    await colormapImage.decode();\r\n    const imageBitmap = await createImageBitmap(colormapImage);\r\n    this.state.renderer!.setColormap(imageBitmap, colormapImage);\r\n  }\r\n\r\n  async changeColormap(colormap) {\r\n    var colormapImage = new Image();\r\n    colormapImage.src = colormaps[colormap].default;\r\n    await colormapImage.decode();\r\n    const imageBitmap = await createImageBitmap(colormapImage);\r\n    this.state.renderer!.setColormap(imageBitmap, colormapImage);\r\n  }\r\n\r\n  runForceDirected() {\r\n    this.state.renderer!.runForceDirected();\r\n  }\r\n\r\n  onSave() {\r\n    this.state.renderer!.onSave();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main_wrapper\">\r\n        <Sidebar\r\n          setValleyValue={this.setValleyValue.bind(this)}\r\n          setPeakValue={this.setPeakValue.bind(this)}\r\n          setWidthFactor={this.setWidthFactor.bind(this)}\r\n          setNodeEdgeData={this.setNodeEdgeData.bind(this)}\r\n          setGlobalRange={this.setGlobalRange.bind(this)}\r\n          setIdealLength={this.setIdealLength.bind(this)}\r\n          setCoolingFactor={this.setCoolingFactor.bind(this)}\r\n          toggleNodeLayer={this.toggleNodeLayer.bind(this)}\r\n          toggleTerrainLayer={this.toggleTerrainLayer.bind(this)}\r\n          toggleEdgeLayer={this.toggleEdgeLayer.bind(this)}\r\n          runForceDirected={this.runForceDirected.bind(this)}\r\n          setColorHill={this.setColorHill.bind(this)}\r\n          setColorValley={this.setColorValley.bind(this)}\r\n          setColorMountain={this.setColorMountain.bind(this)}\r\n          onSave={this.onSave.bind(this)}\r\n        />\r\n        <div className=\"canvasContainer\">\r\n          <Select\r\n            className=\"m-2\"\r\n            placeholder=\"Choose colormap...\"\r\n            onChange={(e) => this.changeColormap(e!.value)}\r\n            options={colormap_list.map((cm) => {\r\n              return { label: cm, value: cm };\r\n            })}\r\n          ></Select>\r\n          <Form.Label className={\"out\"} ref={this.state.fpsRef}>\r\n            FPS: n/a\r\n          </Form.Label>\r\n          <br />\r\n          <Form.Label className={\"out\"} ref={this.state.iterRef}></Form.Label>\r\n          <div id=\"node_count\"></div>\r\n          <div id=\"graphDiv\"></div>\r\n          <canvas ref={this.state.canvasRef} width={800} height={800}></canvas>\r\n\r\n          <canvas\r\n            hidden={true}\r\n            ref={this.state.outCanvasRef}\r\n            width={800}\r\n            height={800}\r\n          ></canvas>\r\n          <canvas\r\n            hidden={true}\r\n            ref={this.state.colorCanvasRef}\r\n            width={180}\r\n            height={1}\r\n          ></canvas>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page;"]}