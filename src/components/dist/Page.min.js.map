{"version":3,"sources":["Page.tsx"],"names":["react_1","require","Sidebar_1","react_2","render_1","rainbow_png_1","rainbow2_png_1","react_bootstrap_1","react_select_1","importAll","r","images","keys","map","item","index","replace","colormaps","context","colormap_list","console","log","Page","_super","props","_this","call","this","state","widthFactor","canvasRef","createRef","outCanvasRef","colorCanvasRef","fpsRef","iterRef","colorValley","colorHill","colorMountain","renderer","__extends","prototype","componentDidMount","navigator","gpu","requestAdapter","adapter","_a","sent","requestDevice","requiredLimits","maxStorageBufferBindingSize","limits","device","colormapImage","Image","src","decode","createImageBitmap","imageBitmap","setState","setNodeEdgeData","nodeData","edgeData","setWidthFactor","setPeakValue","value","setValleyValue","setIdealLength","setCoolingFactor","setGlobalRange","setColorValley","updateColormap","setColorHill","setColorMountain","toggleNodeLayer","toggleTerrainLayer","toggleEdgeLayer","colorCanvas","current","getContext","drawImage","data","getImageData","i","putImageData","url","toDataURL","setColormap","changeColormap","colormap","runForceDirected","onSave","render","createElement","className","bind","placeholder","onChange","e","options","cm","label","Form","Label","ref","id","width","height","hidden","Component","exports"],"mappings":"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","file":"Page.min.js","sourcesContent":["import React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport { createRef, MutableRefObject } from 'react';\r\nimport Renderer from \"../webgpu/render\";\r\nimport colormap from './rainbow.png';\r\nimport colormap2 from './rainbow2.png';\r\nimport { Form } from 'react-bootstrap';\r\nimport Select from 'react-select';\r\nfunction importAll(r) {\r\n    let images = {};\r\n    r.keys().map((item, index) => { images[item.replace('./', '').replace('.png', '')] = r(item); });\r\n    return images;\r\n}\r\n  \r\nconst colormaps = importAll(require.context('../colormaps', false, /\\.(png|jpe?g|svg)$/));\r\nconst colormap_list = ['magma', 'inferno', 'plasma', 'viridis', 'cividis', 'twilight', 'twilight_shifted', 'turbo', 'Blues', 'BrBG', 'BuGn', 'BuPu', 'CMRmap', 'GnBu', 'Greens', 'Greys', 'OrRd', 'Oranges', 'PRGn', 'PiYG', 'PuBu', 'PuBuGn', 'PuOr', 'PuRd', 'Purples', 'RdBu', 'RdGy', 'RdPu', 'RdYlBu', 'RdYlGn', 'Reds', 'Spectral', 'Wistia', 'YlGn', 'YlGnBu', 'YlOrBr', 'YlOrRd', 'afmhot', 'autumn', 'binary', 'bone', 'brg', 'bwr', 'cool', 'coolwarm', 'copper', 'cubehelix', 'flag', 'gist_earth', 'gist_gray', 'gist_heat', 'gist_ncar', 'gist_rainbow', 'gist_stern', 'gist_yarg', 'gnuplot', 'gnuplot2', 'gray', 'hot', 'hsv', 'jet', 'nipy_spectral', 'ocean', 'pink', 'prism', 'rainbow', 'seismic', 'spring', 'summer', 'terrain', 'winter', 'Accent', 'Dark2', 'Paired', 'Pastel1', 'Pastel2', 'Set1', 'Set2', 'Set3', 'tab10', 'tab20', 'tab20b', 'tab20c', 'magma_r', 'inferno_r', 'plasma_r', 'viridis_r', 'cividis_r', 'twilight_r', 'twilight_shifted_r', 'turbo_r', 'Blues_r', 'BrBG_r', 'BuGn_r', 'BuPu_r', 'CMRmap_r', 'GnBu_r', 'Greens_r', 'Greys_r', 'OrRd_r', 'Oranges_r', 'PRGn_r', 'PiYG_r', 'PuBu_r', 'PuBuGn_r', 'PuOr_r', 'PuRd_r', 'Purples_r', 'RdBu_r', 'RdGy_r', 'RdPu_r', 'RdYlBu_r', 'RdYlGn_r', 'Reds_r', 'Spectral_r', 'Wistia_r', 'YlGn_r', 'YlGnBu_r', 'YlOrBr_r', 'YlOrRd_r', 'afmhot_r', 'autumn_r', 'binary_r', 'bone_r', 'brg_r', 'bwr_r', 'cool_r', 'coolwarm_r', 'copper_r', 'cubehelix_r', 'flag_r', 'gist_earth_r', 'gist_gray_r', 'gist_heat_r', 'gist_ncar_r', 'gist_rainbow_r', 'gist_stern_r', 'gist_yarg_r', 'gnuplot_r', 'gnuplot2_r', 'gray_r', 'hot_r', 'hsv_r', 'jet_r', 'nipy_spectral_r', 'ocean_r', 'pink_r', 'prism_r', 'rainbow_r', 'seismic_r', 'spring_r', 'summer_r', 'terrain_r', 'winter_r', 'Accent_r', 'Dark2_r', 'Paired_r', 'Pastel1_r', 'Pastel2_r', 'Set1_r', 'Set2_r', 'Set3_r', 'tab10_r', 'tab20_r', 'tab20b_r', 'tab20c_r'];\r\nconsole.log(colormaps['magma'].default);\r\nconsole.log(colormap);\r\n\r\ntype PageState = {\r\n    widthFactor: number,\r\n    canvasRef: MutableRefObject<HTMLCanvasElement | null>,\r\n    outCanvasRef: MutableRefObject<HTMLCanvasElement | null>,\r\n    colorCanvasRef: MutableRefObject<HTMLCanvasElement | null>,\r\n    fpsRef: MutableRefObject<HTMLLabelElement | null>,\r\n    iterRef: MutableRefObject<HTMLLabelElement | null>,\r\n    colorValley : number,\r\n    colorHill : number,\r\n    colorMountain : number,\r\n    renderer: Renderer | null,\r\n}\r\nclass Page extends React.Component<{}, PageState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            widthFactor: 1000, \r\n            canvasRef: createRef<HTMLCanvasElement | null>(), \r\n            outCanvasRef: createRef<HTMLCanvasElement | null>(), \r\n            colorCanvasRef: createRef<HTMLCanvasElement | null>(), \r\n            fpsRef: createRef<HTMLLabelElement | null>(),\r\n            iterRef: createRef<HTMLLabelElement | null>(),\r\n            colorValley: 45,\r\n            colorHill: 90,\r\n            colorMountain: 135,\r\n            renderer: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const adapter = (await navigator.gpu.requestAdapter())!;\r\n        console.log(adapter);\r\n        const device = await adapter.requestDevice({\r\n            requiredLimits: {\r\n                \"maxStorageBufferBindingSize\": adapter.limits.maxStorageBufferBindingSize\r\n            }\r\n        }); \r\n        var colormapImage = new Image();\r\n        colormapImage.src = colormap;\r\n        await colormapImage.decode();\r\n        const imageBitmap = await createImageBitmap(colormapImage);\r\n        this.setState({renderer: new Renderer(\r\n            adapter, device, this.state.canvasRef, \r\n            imageBitmap, colormapImage, this.state.outCanvasRef, this.state.fpsRef, this.state.iterRef)\r\n        });\r\n    }\r\n\r\n    setNodeEdgeData(nodeData : Array<number>, edgeData : Array<number>) {\r\n        this.state.renderer!.setNodeEdgeData(nodeData, edgeData);\r\n    }\r\n\r\n    setWidthFactor(widthFactor : number) {\r\n        this.state.renderer!.setWidthFactor(widthFactor);\r\n    }\r\n\r\n    setPeakValue(value : number) {\r\n        this.state.renderer!.setPeakValue(value);\r\n    }\r\n\r\n    setValleyValue(value : number) {\r\n        this.state.renderer!.setValleyValue(value);\r\n    }\r\n\r\n    setIdealLength(value : number) {\r\n        this.state.renderer!.setIdealLength(value);\r\n    }\r\n\r\n    setCoolingFactor(value : number) {\r\n        this.state.renderer!.setCoolingFactor(value);\r\n    }\r\n\r\n    setGlobalRange() {\r\n        this.state.renderer!.setGlobalRange();\r\n    }\r\n\r\n    setColorValley(value : number) {\r\n        this.setState({colorValley: value});\r\n        this.updateColormap();\r\n    }\r\n\r\n    setColorHill(value : number) {\r\n        this.setState({colorHill: value});\r\n        this.updateColormap();\r\n    }\r\n\r\n    setColorMountain(value : number) {\r\n        this.setState({colorMountain: value});\r\n        this.updateColormap();\r\n    }\r\n\r\n    toggleNodeLayer() {\r\n        this.state.renderer!.toggleNodeLayer();\r\n    }\r\n\r\n    toggleTerrainLayer() {\r\n        this.state.renderer!.toggleTerrainLayer();\r\n    }\r\n\r\n    toggleEdgeLayer() {\r\n        this.state.renderer!.toggleEdgeLayer();\r\n    }\r\n\r\n    async updateColormap() {\r\n        var colormapImage = new Image();\r\n        colormapImage.src = colormap2;\r\n        await colormapImage.decode();\r\n        var colorCanvas = this.state.colorCanvasRef.current!;\r\n        var context = colorCanvas.getContext('2d')!;\r\n        context.drawImage(colormapImage, 0, 0);\r\n        let data = context.getImageData(0, 0, 180, 1);\r\n        for (var i = 0; i < this.state.colorValley; i++) {\r\n            data.data[i * 4] = 0;\r\n            data.data[i * 4 + 1] = 0 + (255/this.state.colorValley) * i;\r\n            data.data[i * 4 + 2] = 255;\r\n            data.data[i * 4 + 3] = 255;\r\n        }\r\n        for (var i = this.state.colorValley; i < this.state.colorHill; i++) {\r\n            data.data[i * 4] = 0;\r\n            data.data[i * 4 + 1] = 255;\r\n            data.data[i * 4 + 2] = 255 - (255/(this.state.colorHill-this.state.colorValley)) * (i - this.state.colorValley);\r\n            data.data[i * 4 + 3] = 255;\r\n        }\r\n        for (var i = this.state.colorHill; i < this.state.colorMountain; i++) {\r\n            data.data[i * 4] = 0 + (255/(this.state.colorMountain-this.state.colorHill)) * (i-this.state.colorHill);\r\n            data.data[i * 4 + 1] = 255;\r\n            data.data[i * 4 + 2] = 0;\r\n            data.data[i * 4 + 3] = 255;\r\n        }\r\n        for (var i = this.state.colorMountain; i < 180; i++) {\r\n            data.data[i * 4] = 255;\r\n            data.data[i * 4 + 1] = 255 - (255/(180-this.state.colorMountain)) * (i-this.state.colorMountain);\r\n            data.data[i * 4 + 2] = 0;\r\n            data.data[i * 4 + 3] = 255;\r\n        }\r\n        context.putImageData(data, 0, 0);\r\n        let url = colorCanvas.toDataURL();\r\n        colormapImage.src = url;\r\n        await colormapImage.decode();\r\n        const imageBitmap = await createImageBitmap(colormapImage);\r\n        this.state.renderer!.setColormap(imageBitmap, colormapImage);\r\n    }\r\n\r\n    async changeColormap(colormap) {\r\n        var colormapImage = new Image();\r\n        colormapImage.src = colormaps[colormap].default;\r\n        await colormapImage.decode();\r\n        const imageBitmap = await createImageBitmap(colormapImage);   \r\n        this.state.renderer!.setColormap(imageBitmap, colormapImage);\r\n    }\r\n\r\n    runForceDirected() {\r\n        this.state.renderer!.runForceDirected();\r\n    }\r\n\r\n    onSave() {\r\n        this.state.renderer!.onSave();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"main_wrapper\">\r\n          <Sidebar\r\n            setValleyValue={this.setValleyValue.bind(this)}\r\n            setPeakValue={this.setPeakValue.bind(this)}\r\n            setWidthFactor={this.setWidthFactor.bind(this)}\r\n            setNodeEdgeData={this.setNodeEdgeData.bind(this)}\r\n            setGlobalRange={this.setGlobalRange.bind(this)}\r\n            setIdealLength={this.setIdealLength.bind(this)}\r\n            setCoolingFactor={this.setCoolingFactor.bind(this)}\r\n            toggleNodeLayer={this.toggleNodeLayer.bind(this)}\r\n            toggleTerrainLayer={this.toggleTerrainLayer.bind(this)}\r\n            toggleEdgeLayer={this.toggleEdgeLayer.bind(this)}\r\n            runForceDirected={this.runForceDirected.bind(this)}\r\n            setColorHill={this.setColorHill.bind(this)}\r\n            setColorValley={this.setColorValley.bind(this)}\r\n            setColorMountain={this.setColorMountain.bind(this)}\r\n            onSave={this.onSave.bind(this)}\r\n          />\r\n          <div className=\"canvasContainer\">\r\n            <Select\r\n              className=\"m-2\"\r\n              placeholder=\"Choose colormap...\"\r\n              onChange={(e) => this.changeColormap(e!.value)}\r\n              options={colormap_list.map((cm) => {\r\n                return { label: cm, value: cm };\r\n              })}\r\n            ></Select>\r\n            <Form.Label className={\"out\"} ref={this.state.fpsRef}>\r\n              FPS: n/a\r\n            </Form.Label>\r\n            <br />\r\n            <Form.Label className={\"out\"} ref={this.state.iterRef}></Form.Label>\r\n            <div id=\"node_count\"></div>\r\n            <div id=\"graphDiv\"></div>\r\n            <canvas\r\n              ref={this.state.canvasRef}\r\n              width={800}\r\n              height={800}\r\n            ></canvas>\r\n\r\n            <canvas\r\n              hidden={true}\r\n              ref={this.state.outCanvasRef}\r\n              width={800}\r\n              height={800}\r\n            ></canvas>\r\n            <canvas\r\n              hidden={true}\r\n              ref={this.state.colorCanvasRef}\r\n              width={180}\r\n              height={1}\r\n            ></canvas>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Page;"]}