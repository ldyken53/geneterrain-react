{"version":3,"sources":["stats.module.js"],"names":["self","window","Stats","mode","container","document","createElement","addPanel","panel","appendChild","dom","showPanel","id","i","children","length","style","display","cssText","event","preventDefault","prevTime","beginTime","Date","now","frames","fpsHistory","fpsPanel","Panel","performance","memory","memPanel","REVISION","begin","end","time","msPanel","fps","domElement","push","update","setMode","usedJSHeapSize","jsHeapSizeLimit","PR","round","TEXT_Y","this","canvas","width","context","name","fg","bg","textBaseline","fillStyle","fillRect","devicePixelRatio","GRAPH_X","globalAlpha","min","drawImage","getContext","GRAPH_WIDTH","WIDTH","HEIGHT","fillText","TEXT_X","GRAPH_Y","GRAPH_HEIGHT","value","maxValue","Math","max"],"mappings":"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","file":"stats.module.min.js","sourcesContent":["/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\nvar self = window.self;\r\nvar Stats = function () {\r\n  var mode = 0;\r\n\r\n  var container = document.createElement(\"div\");\r\n  container.style.cssText =\r\n    \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\r\n  container.addEventListener(\r\n    \"click\",\r\n    function (event) {\r\n      event.preventDefault();\r\n      showPanel(++mode % container.children.length);\r\n    },\r\n    false\r\n  );\r\n\r\n  //\r\n\r\n  function addPanel(panel) {\r\n    container.appendChild(panel.dom);\r\n    return panel;\r\n  }\r\n\r\n  function showPanel(id) {\r\n    for (var i = 0; i < container.children.length; i++) {\r\n      container.children[i].style.display = i === id ? \"block\" : \"none\";\r\n    }\r\n\r\n    mode = id;\r\n  }\r\n\r\n  //\r\n\r\n  var beginTime = (performance || Date).now(),\r\n    prevTime = beginTime,\r\n    frames = 0,\r\n    fpsHistory = [];\r\n\r\n  var fpsPanel = addPanel(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\"));\r\n  var msPanel = addPanel(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\r\n\r\n  if (self.performance && self.performance.memory) {\r\n    var memPanel = addPanel(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\r\n  }\r\n\r\n  showPanel(0);\r\n\r\n  return {\r\n    REVISION: 16,\r\n\r\n    dom: container,\r\n\r\n    addPanel: addPanel,\r\n    showPanel: showPanel,\r\n\r\n    getFPSHistory: function () {\r\n      return fpsHistory;\r\n    },\r\n\r\n    begin: function () {\r\n      beginTime = (performance || Date).now();\r\n    },\r\n\r\n    end: function () {\r\n      frames++;\r\n\r\n      var time = (performance || Date).now();\r\n\r\n      msPanel.update(time - beginTime, 200);\r\n\r\n      if (time >= prevTime + 1000) {\r\n        const fps = (frames * 1000) / (time - prevTime);\r\n        fpsHistory.push(fps);\r\n\r\n        fpsPanel.update(fps, 100);\r\n\r\n        prevTime = time;\r\n        frames = 0;\r\n\r\n        if (memPanel) {\r\n          var memory = performance.memory;\r\n          memPanel.update(\r\n            memory.usedJSHeapSize / 1048576,\r\n            memory.jsHeapSizeLimit / 1048576\r\n          );\r\n        }\r\n      }\r\n\r\n      return time;\r\n    },\r\n\r\n    update: function () {\r\n      beginTime = this.end();\r\n    },\r\n\r\n    // Backwards Compatibility\r\n\r\n    domElement: container,\r\n    setMode: showPanel,\r\n  };\r\n};\r\n\r\nStats.Panel = function (name, fg, bg) {\r\n  var min = Infinity,\r\n    max = 0,\r\n    round = Math.round;\r\n  var PR = round(window.devicePixelRatio || 1);\r\n\r\n  var WIDTH = 80 * PR,\r\n    HEIGHT = 48 * PR,\r\n    TEXT_X = 3 * PR,\r\n    TEXT_Y = 2 * PR,\r\n    GRAPH_X = 3 * PR,\r\n    GRAPH_Y = 15 * PR,\r\n    GRAPH_WIDTH = 74 * PR,\r\n    GRAPH_HEIGHT = 30 * PR;\r\n\r\n  var canvas = document.createElement(\"canvas\");\r\n  canvas.width = WIDTH;\r\n  canvas.height = HEIGHT;\r\n  canvas.style.cssText = \"width:80px;height:48px\";\r\n\r\n  var context = canvas.getContext(\"2d\");\r\n  context.font = \"bold \" + 9 * PR + \"px Helvetica,Arial,sans-serif\";\r\n  context.textBaseline = \"top\";\r\n\r\n  context.fillStyle = bg;\r\n  context.fillRect(0, 0, WIDTH, HEIGHT);\r\n\r\n  context.fillStyle = fg;\r\n  context.fillText(name, TEXT_X, TEXT_Y);\r\n  context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\r\n\r\n  context.fillStyle = bg;\r\n  context.globalAlpha = 0.9;\r\n  context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\r\n\r\n  return {\r\n    dom: canvas,\r\n\r\n    update: function (value, maxValue) {\r\n      min = Math.min(min, value);\r\n      max = Math.max(max, value);\r\n\r\n      context.fillStyle = bg;\r\n      context.globalAlpha = 1;\r\n      context.fillRect(0, 0, WIDTH, GRAPH_Y);\r\n      context.fillStyle = fg;\r\n      context.fillText(\r\n        round(value) + \" \" + name + \" (\" + round(min) + \"-\" + round(max) + \")\",\r\n        TEXT_X,\r\n        TEXT_Y\r\n      );\r\n\r\n      context.drawImage(\r\n        canvas,\r\n        GRAPH_X + PR,\r\n        GRAPH_Y,\r\n        GRAPH_WIDTH - PR,\r\n        GRAPH_HEIGHT,\r\n        GRAPH_X,\r\n        GRAPH_Y,\r\n        GRAPH_WIDTH - PR,\r\n        GRAPH_HEIGHT\r\n      );\r\n\r\n      context.fillRect(GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT);\r\n\r\n      context.fillStyle = bg;\r\n      context.globalAlpha = 0.9;\r\n      context.fillRect(\r\n        GRAPH_X + GRAPH_WIDTH - PR,\r\n        GRAPH_Y,\r\n        PR,\r\n        round((1 - value / maxValue) * GRAPH_HEIGHT)\r\n      );\r\n    },\r\n  };\r\n};\r\n\r\nexport default Stats;\r\n"]}