{"version":3,"sources":["stats.module.js"],"names":["Stats","mode","container","document","createElement","style","cssText","addEventListener","event","preventDefault","showPanel","children","length","addPanel","panel","appendChild","dom","id","i","display","beginTime","performance","Date","now","prevTime","frames","fpsHistory","fpsPanel","Panel","msPanel","self","memory","memPanel","REVISION","getFPSHistory","begin","end","time","update","fps","push","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","name","fg","bg","min","Infinity","max","round","Math","PR","window","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","canvas","width","height","context","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","value","maxValue","drawImage"],"mappings":"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","sourcesContent":["/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar Stats = function () {\r\n  var mode = 0;\r\n\r\n  var container = document.createElement(\"div\");\r\n  container.style.cssText =\r\n    \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\r\n  container.addEventListener(\r\n    \"click\",\r\n    function (event) {\r\n      event.preventDefault();\r\n      showPanel(++mode % container.children.length);\r\n    },\r\n    false\r\n  );\r\n\r\n  //\r\n\r\n  function addPanel(panel) {\r\n    container.appendChild(panel.dom);\r\n    return panel;\r\n  }\r\n\r\n  function showPanel(id) {\r\n    for (var i = 0; i < container.children.length; i++) {\r\n      container.children[i].style.display = i === id ? \"block\" : \"none\";\r\n    }\r\n\r\n    mode = id;\r\n  }\r\n\r\n  //\r\n\r\n  var beginTime = (performance || Date).now(),\r\n    prevTime = beginTime,\r\n    frames = 0,\r\n    fpsHistory = [];\r\n\r\n  var fpsPanel = addPanel(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\"));\r\n  var msPanel = addPanel(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\r\n\r\n  if (self.performance && self.performance.memory) {\r\n    var memPanel = addPanel(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\r\n  }\r\n\r\n  showPanel(0);\r\n\r\n  return {\r\n    REVISION: 16,\r\n\r\n    dom: container,\r\n\r\n    addPanel: addPanel,\r\n    showPanel: showPanel,\r\n\r\n    getFPSHistory: function () {\r\n      return fpsHistory;\r\n    },\r\n\r\n    begin: function () {\r\n      beginTime = (performance || Date).now();\r\n    },\r\n\r\n    end: function () {\r\n      frames++;\r\n\r\n      var time = (performance || Date).now();\r\n\r\n      msPanel.update(time - beginTime, 200);\r\n\r\n      if (time >= prevTime + 1000) {\r\n        const fps = (frames * 1000) / (time - prevTime);\r\n        fpsHistory.push(fps);\r\n\r\n        fpsPanel.update(fps, 100);\r\n\r\n        prevTime = time;\r\n        frames = 0;\r\n\r\n        if (memPanel) {\r\n          var memory = performance.memory;\r\n          memPanel.update(\r\n            memory.usedJSHeapSize / 1048576,\r\n            memory.jsHeapSizeLimit / 1048576\r\n          );\r\n        }\r\n      }\r\n\r\n      return time;\r\n    },\r\n\r\n    update: function () {\r\n      beginTime = this.end();\r\n    },\r\n\r\n    // Backwards Compatibility\r\n\r\n    domElement: container,\r\n    setMode: showPanel,\r\n  };\r\n};\r\n\r\nStats.Panel = function (name, fg, bg) {\r\n  var min = Infinity,\r\n    max = 0,\r\n    round = Math.round;\r\n  var PR = round(window.devicePixelRatio || 1);\r\n\r\n  var WIDTH = 80 * PR,\r\n    HEIGHT = 48 * PR,\r\n    TEXT_X = 3 * PR,\r\n    TEXT_Y = 2 * PR,\r\n    GRAPH_X = 3 * PR,\r\n    GRAPH_Y = 15 * PR,\r\n    GRAPH_WIDTH = 74 * PR,\r\n    GRAPH_HEIGHT = 30 * PR;\r\n\r\n  var canvas = document.createElement(\"canvas\");\r\n  canvas.width = WIDTH;\r\n  canvas.height = HEIGHT;\r\n  canvas.style.cssText = \"width:80px;height:48px\";\r\n\r\n  var context = canvas.getContext(\"2d\");\r\n  context.font = \"bold \" + 9 * PR + \"px Helvetica,Arial,sans-serif\";\r\n  context.textBaseline = \"top\";\r\n\r\n  context.fillStyle = bg;\r\n  context.fillRect(0, 0, WIDTH, HEIGHT);\r\n\r\n  context.fillStyle = fg;\r\n  context.fillText(name, TEXT_X, TEXT_Y);\r\n  context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\r\n\r\n  context.fillStyle = bg;\r\n  context.globalAlpha = 0.9;\r\n  context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\r\n\r\n  return {\r\n    dom: canvas,\r\n\r\n    update: function (value, maxValue) {\r\n      min = Math.min(min, value);\r\n      max = Math.max(max, value);\r\n\r\n      context.fillStyle = bg;\r\n      context.globalAlpha = 1;\r\n      context.fillRect(0, 0, WIDTH, GRAPH_Y);\r\n      context.fillStyle = fg;\r\n      context.fillText(\r\n        round(value) + \" \" + name + \" (\" + round(min) + \"-\" + round(max) + \")\",\r\n        TEXT_X,\r\n        TEXT_Y\r\n      );\r\n\r\n      context.drawImage(\r\n        canvas,\r\n        GRAPH_X + PR,\r\n        GRAPH_Y,\r\n        GRAPH_WIDTH - PR,\r\n        GRAPH_HEIGHT,\r\n        GRAPH_X,\r\n        GRAPH_Y,\r\n        GRAPH_WIDTH - PR,\r\n        GRAPH_HEIGHT\r\n      );\r\n\r\n      context.fillRect(GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT);\r\n\r\n      context.fillStyle = bg;\r\n      context.globalAlpha = 0.9;\r\n      context.fillRect(\r\n        GRAPH_X + GRAPH_WIDTH - PR,\r\n        GRAPH_Y,\r\n        PR,\r\n        round((1 - value / maxValue) * GRAPH_HEIGHT)\r\n      );\r\n    },\r\n  };\r\n};\r\n\r\nexport default Stats;\r\n"],"file":"stats.module.dev.js"}